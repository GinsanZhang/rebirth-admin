var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.485,1,0.91]],["body/components/AppComponent.html",[0,0.733,1,1.28,2,0.153,3,0.128,4,0.871,5,0.871,6,0.871,7,0.128,8,1.805,9,0.737,10,2.137,11,2.292,12,3.281,13,1.322,14,2.739,15,1.322,16,2.739,17,0.368,18,0.802,19,2.561,20,4.426,21,4.426,22,1.119,23,2.162,24,5.009,25,3.355,26,5.205,27,2.736,28,3.355,29,5.205,30,2.736,31,0.969,32,2.162,33,0.575,34,0.033,35,0.614,36,0.368,37,0.529,38,2.162,39,1.082,40,1.44,41,2.162,42,0.615,43,0.208,44,1.394,45,1.394,46,1.245,47,1.253,48,1.136,49,1.036,50,2.162,51,3.281,52,1.805,53,0.871,54,1.569,55,2.162,56,2.162,57,0.128,58,0.237,59,2.162,60,2.162,61,2.162,62,2.162,63,2.162,64,2.162,65,1.805,66,2.162,67,2.162,68,1.569,69,2.162,70,2.162,71,2.162,72,2.162,73,2.162,74,3.281,75,3.695,76,1.805,77,2.162,78,2.162,79,2.162,80,1.136,81,1.902,82,2.162,83,2.162,84,2.162,85,1.805,86,2.162,87,2.162,88,2.162,89,2.162,90,2.162,91,2.162,92,1.569,93,2.162,94,0.529,95,1.216,96,1.322,97,0.949,98,1.783,99,0.871,100,0.871,101,0.625,102,0.737,103,0.871,104,0.625,105,0.871,106,0.625,107,0.801,108,0.871,109,0.625,110,0.625,111,0.871,112,0.625,113,0.801,114,0.871,115,0.625,116,1.216,117,0.871,118,0.625,119,0.871,120,0.625,121,0.737,122,0.801,123,0.575,124,0.801,125,0.871,126,0.016,127,0.016]],["title/modules/AppModule.html",[128,0.838,129,2.03]],["body/modules/AppModule.html",[1,1.803,2,0.232,3,0.192,7,0.192,34,0.033,42,0.685,43,0.314,44,2.103,45,2.103,53,1.314,57,0.26,58,0.358,65,2.723,94,0.798,126,0.022,127,0.022,128,1.173,129,3.99,130,1.432,131,2.625,132,2.192,133,2.114,134,2.723,135,2.723,136,2.723,137,2.723,138,3.339,139,2.761,140,2.318,141,1.715,142,1.715,143,3.263,144,4.41,145,3.201,146,2.103,147,2.556,148,2.103,149,2.723,150,2.368,151,2.723,152,4.41,153,3.263,154,3.263,155,2.368,156,3.263,157,2.723,158,2.723,159,3.263,160,3.263,161,3.263,162,3.263]],["title/directives/CollapseDirective.html",[97,0.91,123,0.838]],["body/directives/CollapseDirective.html",[2,0.179,3,0.149,7,0.149,9,0.859,10,1.362,17,0.429,18,0.899,22,0.859,31,1.398,33,0.978,34,0.033,35,0.51,36,0.902,37,0.899,39,1.167,40,2.401,42,0.404,43,0.243,57,0.149,58,0.277,97,1.255,123,1.155,124,1.768,126,0.018,127,0.018,133,2.081,163,2.103,164,2.131,165,4.341,166,3.464,167,1.155,168,5.299,169,6.014,170,3.984,171,3.464,172,3.676,173,3.464,174,3.984,175,3.151,176,4.341,177,4.341,178,3.676,179,4.917,180,3.676,181,2.37,182,2.519,183,1.608,184,2.519,185,2.519,186,3.676,187,4.773,188,2.519,189,2.519,190,2.519,191,2.519,192,2.519,193,3.676,194,3.676,195,1.46,196,2.519,197,2.519,198,2.103,199,2.519,200,2.519,201,2.519,202,2.519,203,2.519,204,2.519,205,2.519,206,2.519,207,2.519,208,2.519,209,2.519,210,2.519,211,4.341,212,2.519,213,2.519,214,1.829,215,3.676,216,2.519,217,2.519,218,2.519,219,2.519,220,2.519,221,2.519,222,2.519,223,2.519,224,2.519]],["title/modules/CoreModule.html",[128,0.838,138,1.825]],["body/modules/CoreModule.html",[2,0.216,3,0.248,7,0.179,25,2.709,27,2.964,30,2.964,34,0.033,42,0.677,43,0.293,46,1.712,47,1.762,48,1.598,49,1.457,57,0.284,58,0.334,85,2.538,94,0.743,126,0.021,127,0.021,128,1.118,130,1.334,131,1.598,132,1.334,133,2.308,138,3.622,140,2.209,141,1.598,142,1.598,147,2.436,225,2.538,226,2.538,227,3.268,228,2.703,229,3.268,230,3.04,231,4.202,232,4.202,233,2.538,234,2.709,235,4.202,236,1.762,237,2.538,238,2.538,239,3.04,240,3.04,241,3.04,242,3.04,243,2.207,244,3.04,245,3.04,246,3.04,247,3.04,248,2.207,249,2.538,250,3.04,251,3.04,252,3.04,253,3.04]],["title/interfaces/CurrentUser.html",[81,1.825,254,1.382]],["body/interfaces/CurrentUser.html",[2,0.298,3,0.247,7,0.247,17,0.714,34,0.031,35,0.816,36,1.002,57,0.247,81,3.007,126,0.026,127,0.026,167,1.629,183,2.395,254,2.277,255,3.5,256,3.5,257,5.886,258,5.886,259,4.913]],["title/components/FieldErrorComponent.html",[0,0.485,101,0.91]],["body/components/FieldErrorComponent.html",[0,0.738,1,0.634,2,0.156,3,0.129,4,0.884,5,0.884,6,0.884,7,0.129,9,0.748,10,2.144,11,2.3,13,1.336,15,1.336,17,0.373,18,0.811,19,1.755,22,1.131,31,1.279,33,0.584,34,0.032,35,0.618,36,0.759,37,1.09,39,1.171,40,1.456,42,0.439,43,0.211,57,0.129,58,0.241,80,2.103,94,0.536,95,1.229,96,1.336,97,0.959,98,1.796,99,0.884,100,0.884,101,1.289,102,1.917,103,0.884,104,0.634,105,0.884,106,0.634,107,0.813,108,0.884,109,0.634,110,0.634,111,0.884,112,0.634,113,0.813,114,0.884,115,0.634,116,1.229,117,0.884,118,0.634,119,0.884,120,0.634,121,0.748,122,0.813,123,0.584,124,0.813,125,0.884,126,0.016,127,0.016,164,1.923,167,1.042,173,1.592,175,3.476,181,1.414,183,1.652,195,1.272,214,2.408,228,2.507,243,1.592,260,4.496,261,3.91,262,1.831,263,2.578,264,2.769,265,3.317,266,2.904,267,3.317,268,3.317,269,4.459,270,5.037,271,3.237,272,3.722,273,2.194,274,5.037,275,5.231,276,3.317,277,2.194,278,1.051,279,0.884,280,2.769,281,2.194,282,2.194,283,2.194,284,3.722,285,2.194,286,3.317,287,2.194,288,2.194,289,2.194,290,2.194,291,1.831,292,3.317,293,2.194,294,2.194,295,2.194,296,4.459,297,3.317,298,2.194,299,2.194,300,2.194,301,2.408,302,2.194,303,2.194,304,2.194,305,2.194,306,2.194,307,2.194]],["title/injectables/GuidService.html",[227,1.825,308,0.706]],["body/injectables/GuidService.html",[2,0.283,3,0.235,7,0.235,17,0.678,18,1.229,31,1.229,34,0.032,36,0.678,39,1.229,42,0.438,43,0.384,57,0.235,58,0.438,80,2.642,126,0.025,127,0.025,167,1.578,227,2.913,278,1.91,279,1.606,308,1.234,309,3.327,310,5.78,311,5.78,312,3.985,313,4.195,314,4.195,315,3.985,316,3.985,317,2.913,318,3.985,319,3.985,320,3.985,321,3.985,322,3.985,323,3.985,324,3.985]],["title/injectables/LoadingService.html",[27,1.655,308,0.706]],["body/injectables/LoadingService.html",[2,0.263,3,0.218,7,0.218,17,0.63,18,1.172,22,1.263,27,2.521,31,1.3,33,0.985,34,0.033,35,0.513,36,0.63,37,0.905,39,1.375,42,0.527,43,0.357,46,1.163,48,1.947,57,0.218,58,0.407,95,1.372,126,0.024,127,0.024,171,4.083,173,4.083,308,1.193,317,2.78,325,3.092,326,3.704,327,5.969,328,3.704,329,3.704,330,3.704,331,1.947,332,4.796,333,4.796,334,3.704,335,4.796,336,3.704]],["title/components/LoginComponent.html",[0,0.485,104,0.91]],["body/components/LoginComponent.html",[0,0.772,1,0.706,2,0.173,3,0.144,4,0.984,5,0.984,6,0.984,7,0.144,9,0.833,10,2.193,11,2.357,13,1.448,15,1.448,17,0.416,18,0.879,19,1.871,22,1.226,28,3.493,31,1.225,33,0.65,34,0.032,35,0.652,36,0.726,37,0.597,39,0.879,40,1.072,42,0.55,43,0.235,44,1.574,45,1.574,46,1.129,53,0.984,57,0.144,58,0.268,68,3.414,94,0.597,95,1.332,96,1.448,97,1.039,98,1.895,99,0.984,100,0.984,101,0.706,102,0.833,103,0.984,104,1.36,105,0.984,106,0.706,107,0.905,108,0.984,109,0.706,110,0.706,111,0.984,112,0.706,113,0.905,114,0.984,115,0.706,116,1.332,117,0.984,118,0.706,119,0.984,120,0.706,121,1.226,122,0.905,123,0.65,124,0.905,125,0.984,126,0.018,127,0.018,166,1.773,167,1.129,181,2.749,195,1.416,248,3.805,263,1.574,278,1.171,279,0.984,284,3.926,337,2.039,338,3.594,339,3.594,340,4.703,341,4.703,342,2.443,343,4.703,344,2.848,345,3.594,346,3.594,347,2.443,348,2.443,349,3,350,2.443,351,2.039,352,2.039,353,2.443,354,2.443,355,2.039,356,3.594,357,2.039,358,2.443,359,2.443,360,2.443,361,2.039,362,2.443,363,2.443,364,3,365,3.594,366,2.609]],["title/modules/LoginModule.html",[128,0.838,367,2.03]],["body/modules/LoginModule.html",[2,0.26,3,0.216,7,0.216,34,0.032,42,0.675,43,0.354,53,1.478,57,0.312,58,0.403,94,0.897,104,1.722,126,0.024,127,0.024,128,1.268,130,1.61,131,2.783,132,1.61,133,2.538,139,2.854,140,2.506,141,1.929,142,1.929,147,2.763,148,2.366,150,2.664,155,2.664,344,3.129,352,3.063,367,4.039,368,3.063,369,3.063,370,3.67,371,3.063,372,3.67,373,3.67,374,3.67,375,3.063]],["title/injectables/LoginService.html",[308,0.706,344,1.655]],["body/injectables/LoginService.html",[2,0.219,3,0.182,7,0.182,17,0.524,18,1.036,19,2.292,22,1.446,25,3.808,31,1.185,33,1.29,34,0.033,35,0.672,36,0.889,37,1.185,39,1.339,42,0.637,43,0.297,46,1.331,47,2.81,49,1.476,52,2.57,57,0.182,58,0.338,80,1.618,81,1.785,121,1.05,126,0.021,127,0.021,183,1.57,248,3.077,280,2.57,308,1.087,344,2.228,355,2.57,357,2.57,376,2.57,377,4.239,378,3.079,379,5.222,380,3.079,381,3.079,382,2.57,383,4.239,384,3.079,385,4.848,386,4.572,387,4.239,388,3.538,389,3.079,390,3.079,391,2.235,392,4.239,393,3.079,394,3.079,395,2.57,396,2.235,397,3.079,398,3.079,399,3.079,400,3.079,401,3.079,402,3.079,403,3.079,404,3.079,405,3.079]],["title/components/ManageAppComponent.html",[0,0.485,106,0.91]],["body/components/ManageAppComponent.html",[0,0.818,1,0.819,2,0.201,3,0.167,4,1.141,5,1.141,6,1.141,7,0.167,9,0.966,10,2.256,11,2.473,13,1.611,14,3.339,15,1.611,16,3.339,17,0.482,18,0.978,22,0.966,31,1.133,33,0.754,34,0.032,35,0.698,36,0.681,37,0.693,39,0.693,40,1.755,42,0.509,43,0.273,57,0.167,58,0.311,94,0.693,95,1.482,96,1.611,97,1.157,98,2.029,99,1.141,100,1.141,101,0.819,102,0.966,103,1.141,104,0.819,105,1.141,106,1.457,107,2.099,108,1.141,109,0.819,110,0.819,111,1.141,112,0.819,113,1.05,114,1.141,115,0.819,116,1.482,117,1.141,118,0.819,119,1.141,120,0.819,121,0.966,122,1.05,123,0.754,124,1.05,125,1.141,126,0.02,127,0.02,164,2.319,167,1.256,263,2.988,271,3.656,331,1.489,406,3.656,407,2.365,408,3.093,409,2.833,410,2.898,411,4,412,2.833,413,2.833,414,1.489,415,2.365,416,2.365,417,2.833,418,2.365,419,2.833,420,2.833,421,4,422,4]],["title/modules/ManageAppModule.html",[128,0.838,423,2.03]],["body/modules/ManageAppModule.html",[2,0.237,3,0.197,7,0.197,34,0.032,42,0.677,43,0.321,53,1.343,57,0.298,58,0.366,94,0.815,106,1.676,107,1.658,112,1.676,113,1.235,120,1.676,121,1.137,126,0.022,127,0.022,128,1.191,130,1.463,131,2.655,132,1.463,133,2.421,139,2.778,140,2.352,141,1.753,142,1.753,147,2.594,148,2.15,149,2.784,150,2.421,151,2.784,155,2.421,375,2.784,406,2.421,410,3.047,416,2.784,423,4.08,424,2.784,425,2.784,426,3.335,427,2.784,428,3.335,429,2.421,430,4.475,431,2.421]],["title/components/MenuBarComponent.html",[0,0.485,109,0.91]],["body/components/MenuBarComponent.html",[0,0.641,1,0.472,2,0.116,3,0.096,4,0.658,5,0.658,6,0.658,7,0.096,9,0.557,10,1.993,11,2.127,13,1.06,15,1.06,17,0.278,18,0.644,19,1.452,22,0.898,28,2.869,31,1.373,33,0.88,34,0.032,35,0.617,36,0.758,37,0.809,39,1.23,40,2.055,42,0.457,43,0.157,46,0.513,48,0.858,53,0.658,57,0.096,58,0.289,80,1.384,92,1.185,94,0.399,95,0.975,96,1.06,97,0.761,98,1.529,99,0.658,100,0.658,101,0.472,102,0.557,103,0.658,104,0.472,105,0.658,106,0.472,107,0.605,108,0.658,109,1.098,110,1.556,111,0.658,112,0.472,113,0.605,114,0.658,115,0.472,116,0.975,117,0.658,118,0.472,119,0.658,120,0.472,121,0.557,122,0.605,123,0.434,124,0.605,125,0.658,126,0.013,127,0.013,164,1.526,166,1.911,167,0.827,170,2.762,171,1.911,174,3.168,175,3.022,179,3.168,181,2.447,183,0.605,198,2.197,214,1.911,236,1.526,263,2.133,264,2.197,271,2.755,278,1.996,279,1.677,313,3.168,317,1.526,361,1.362,396,1.185,408,2.34,414,2.984,415,1.362,432,3.659,433,1.362,434,3.308,435,2.632,436,2.632,437,2.632,438,2.632,439,3.796,440,4.164,441,3.716,442,3.796,443,3.796,444,3.796,445,4.164,446,3.796,447,2.632,448,2.632,449,3.796,450,3.308,451,1.632,452,4.682,453,2.632,454,1.632,455,1.632,456,1.632,457,1.632,458,1.632,459,2.632,460,1.632,461,1.632,462,2.632,463,1.632,464,1.632,465,1.632,466,1.632,467,2.632,468,1.632,469,2.632,470,1.632,471,2.762,472,1.632,473,1.632,474,2.632,475,2.632,476,4.451,477,2.197,478,2.632,479,2.632,480,3.796,481,2.632,482,3.308,483,1.632,484,2.632,485,2.632,486,1.632,487,1.632,488,1.632,489,1.632,490,1.632,491,1.632,492,1.632,493,1.632,494,1.632,495,3.796,496,2.632]],["title/interfaces/MenuConfig.html",[254,1.382,408,1.655]],["body/interfaces/MenuConfig.html",[2,0.309,3,0.257,7,0.257,17,0.742,34,0.031,35,0.604,36,0.742,57,0.313,110,1.725,126,0.026,127,0.026,167,1.669,183,2.21,254,2.515,408,2.793,414,2.292,432,2.811,497,3.165,498,3.942,499,3.165,500,3.165,501,3.165,502,3.165]],["title/interfaces/MenuItem.html",[254,1.382,498,2.03]],["body/interfaces/MenuItem.html",[2,0.276,3,0.229,7,0.229,17,0.661,34,0.031,35,0.794,36,1.006,37,1.477,57,0.292,110,1.123,126,0.024,127,0.024,167,1.552,183,2.371,254,2.386,408,2.041,414,2.041,432,2.503,497,2.818,498,3.895,499,4.156,500,4.156,501,4.156,502,4.156]],["title/injectables/MenuService.html",[308,0.706,410,1.655]],["body/injectables/MenuService.html",[2,0.222,3,0.184,7,0.184,17,0.532,18,1.047,19,2.145,22,1.066,25,3.666,31,1.195,33,0.832,34,0.033,35,0.834,36,0.532,37,0.764,39,1.285,42,0.537,43,0.301,46,0.982,49,1.499,57,0.184,58,0.343,110,0.904,126,0.021,127,0.021,249,2.61,308,1.096,331,1.644,386,2.61,391,2.27,410,2.252,418,4.388,499,4.304,500,2.27,501,3.816,502,3.547,503,2.61,504,5.257,505,3.127,506,3.127,507,3.127,508,3.127,509,3.127,510,3.127,511,3.127,512,4.284,513,3.127,514,4.284,515,4.284,516,3.127,517,4.284,518,3.127,519,3.127,520,3.127,521,3.127,522,3.127]],["title/pipes/MessagePipe.html",[523,1.825,524,1.825]],["body/pipes/MessagePipe.html",[2,0.286,3,0.237,7,0.237,9,1.373,18,0.984,31,0.984,33,1.071,34,0.032,35,0.766,36,0.685,37,0.984,39,1.236,42,0.555,43,0.388,57,0.237,58,0.442,126,0.025,127,0.025,164,2.333,228,2.65,243,2.922,279,2.037,291,3.36,331,2.116,366,3.671,523,3.205,524,2.931,525,3.36,526,4.025,527,5.057,528,5.801,529,4.025,530,4.025,531,5.057,532,4.025]],["title/injectables/MessageResolver.html",[228,1.509,308,0.706]],["body/injectables/MessageResolver.html",[2,0.187,3,0.155,7,0.155,17,0.447,18,0.927,19,1.952,31,1.262,33,1.183,34,0.033,35,0.617,36,0.999,37,1.087,39,1.315,42,0.289,43,0.253,57,0.155,58,0.289,80,2.338,102,1.661,126,0.019,127,0.019,167,1.191,183,2.334,228,1.818,266,1.908,272,2.195,278,2.334,279,1.961,301,4.119,308,0.997,351,3.165,366,4.36,388,4.489,533,4.489,534,2.195,535,4.869,536,3.792,537,3.792,538,4.448,539,3.792,540,5.943,541,2.629,542,3.792,543,2.629,544,2.629,545,2.629,546,2.629,547,3.792,548,2.629,549,2.629,550,4.448,551,2.629,552,2.629,553,2.629,554,2.629,555,2.629,556,2.629,557,2.629,558,2.629,559,2.629,560,2.629,561,2.629,562,2.629,563,2.629]],["title/components/OrderMockComponent.html",[0,0.485,112,0.91]],["body/components/OrderMockComponent.html",[0,0.874,1,0.986,2,0.242,3,0.201,4,1.374,5,1.374,6,1.374,7,0.201,9,1.163,10,2.327,11,2.512,13,1.83,15,1.83,34,0.031,35,0.708,42,0.375,43,0.329,57,0.201,58,0.375,94,0.834,95,1.683,96,1.83,97,1.314,98,2.194,99,1.374,100,1.374,101,0.986,102,1.163,103,1.374,104,0.986,105,1.374,106,0.986,107,1.263,108,1.374,109,0.986,110,0.986,111,1.374,112,1.575,113,2.269,114,1.374,115,0.986,116,1.683,117,1.374,118,0.986,119,1.374,120,0.986,121,1.163,122,2.101,123,0.907,124,1.263,125,1.374,126,0.022,127,0.022,429,2.475,564,2.847,565,2.475,566,3.792,567,3.792]],["title/components/PageFooterComponent.html",[0,0.485,115,0.91]],["body/components/PageFooterComponent.html",[0,0.868,1,0.967,2,0.237,3,0.197,4,1.347,5,1.347,6,1.347,7,0.197,9,1.14,10,2.32,11,2.504,13,1.806,15,1.806,34,0.031,35,0.701,42,0.367,43,0.322,57,0.197,58,0.367,94,0.818,95,1.661,96,1.806,97,1.296,98,2.177,99,1.347,100,1.347,101,0.967,102,1.14,103,1.347,104,0.967,105,1.347,106,0.967,107,1.239,108,1.347,109,0.967,110,0.967,111,1.347,112,0.967,113,1.239,114,1.347,115,1.563,116,2.231,117,1.347,118,0.967,119,1.347,120,0.967,121,1.14,122,1.239,123,0.89,124,1.239,125,1.347,126,0.022,127,0.022,568,2.427,569,2.427,570,2.791,571,4.483,572,4.483,573,4.483,574,4.483,575,4.483,576,3.344,577,4.483,578,4.483]],["title/components/PageHeaderComponent.html",[0,0.485,118,0.91]],["body/components/PageHeaderComponent.html",[0,0.814,1,0.808,2,0.198,3,0.165,4,1.125,5,1.125,6,1.125,7,0.165,9,0.953,10,2.25,11,2.424,13,1.595,15,1.595,17,0.475,18,0.968,31,1.224,34,0.032,35,0.638,36,0.674,39,0.683,40,1.226,42,0.307,43,0.269,46,1.244,57,0.165,58,0.307,94,0.683,95,1.467,96,1.595,97,1.145,98,2.016,99,1.125,100,1.125,101,0.808,102,0.953,103,1.125,104,0.808,105,1.125,106,0.808,107,1.035,108,1.125,109,0.808,110,0.808,111,1.125,112,0.808,113,1.035,114,1.125,115,0.808,116,2.136,117,1.125,118,1.447,119,1.125,120,0.808,121,0.953,122,1.035,123,0.743,124,1.035,125,1.125,126,0.02,127,0.02,167,1.244,183,1.467,236,1.619,278,1.339,279,1.125,317,1.619,364,3.306,382,2.332,471,3.841,568,3.836,579,3.836,580,2.332,581,3.96,582,3.96,583,3.96,584,5.285,585,5.006,586,5.006,587,5.006,588,4.601,589,2.794,590,2.794,591,2.794,592,3.96,593,2.794,594,2.794,595,2.794,596,2.794]],["title/injectables/ReStorageService.html",[229,1.825,308,0.706]],["body/injectables/ReStorageService.html",[2,0.213,3,0.177,7,0.177,17,0.511,18,1.018,22,1.024,31,1.373,33,1.444,34,0.032,35,0.716,36,0.956,37,1.263,39,1.435,42,0.458,43,0.289,46,0.943,57,0.177,58,0.33,126,0.021,127,0.021,167,1.308,183,2.259,229,2.415,233,2.506,234,1.935,278,1.439,279,2.32,301,4.262,308,1.073,331,1.578,441,3.993,597,2.506,598,5.167,599,5.167,600,4.166,601,4.166,602,3.002,603,5.616,604,4.166,605,3.002,606,4.166,607,3.002,608,5.167,609,4.166,610,3.002,611,4.166,612,3.002,613,3.002,614,3.002,615,4.783,616,4.166,617,3.002,618,3.002,619,3.002]],["title/modules/SharedModule.html",[128,0.838,139,1.509]],["body/modules/SharedModule.html",[2,0.188,3,0.156,7,0.156,34,0.033,42,0.666,43,0.255,46,1.197,48,1.391,49,1.269,53,1.066,57,0.288,58,0.291,94,0.647,101,1.739,102,0.903,109,1.739,110,0.765,115,1.739,116,1.412,118,1.739,123,1.6,126,0.019,127,0.019,128,1.014,130,1.161,131,2.347,132,1.161,133,1.826,139,3.042,140,2.003,141,1.391,142,1.391,147,2.209,148,2.456,195,1.534,237,3.727,238,3.727,261,1.921,414,1.391,524,3.486,569,1.921,579,1.921,620,2.209,621,2.209,622,2.209,623,2.646,624,4.464,625,2.209,626,4.464,627,4.464,628,2.646,629,2.646,630,2.646,631,2.646,632,2.646,633,2.646]],["title/injectables/TitleService.html",[30,1.655,308,0.706]],["body/injectables/TitleService.html",[2,0.228,3,0.189,7,0.189,17,0.546,18,1.066,19,2.332,22,1.095,28,3.78,30,2.293,31,1.211,33,1.16,34,0.033,35,0.605,36,0.742,37,1.066,39,1.211,40,1.409,42,0.61,43,0.309,44,2.069,45,2.069,53,1.293,57,0.189,58,0.353,68,4.515,126,0.022,127,0.022,145,2.33,146,2.069,236,2.528,308,1.111,331,1.687,349,2.68,395,2.68,396,2.33,523,1.861,634,2.68,635,4.362,636,5.315,637,3.21,638,3.21,639,4.362,640,5.732,641,3.21,642,3.21,643,3.21,644,3.21,645,3.21,646,3.21,647,3.21,648,3.21,649,3.21,650,3.21,651,3.21,652,4.954,653,3.21,654,3.21,655,3.21]],["title/components/UserMockComponent.html",[0,0.485,120,0.91]],["body/components/UserMockComponent.html",[0,0.872,1,0.981,2,0.241,3,0.2,4,1.366,5,1.366,6,1.366,7,0.2,9,1.156,10,2.325,11,2.51,13,1.823,15,1.823,34,0.031,35,0.706,42,0.372,43,0.327,57,0.2,58,0.372,94,0.829,95,1.677,96,1.823,97,1.309,98,2.189,99,1.366,100,1.366,101,0.981,102,1.156,103,1.366,104,0.981,105,1.366,106,0.981,107,1.256,108,1.366,109,0.981,110,0.981,111,1.366,112,0.981,113,1.256,114,1.366,115,0.981,116,1.677,117,1.366,118,0.981,119,1.366,120,1.571,121,2.086,122,2.098,123,0.902,124,1.256,125,1.366,126,0.022,127,0.022,431,2.462,565,2.462,566,3.778,567,3.778,656,2.831,657,4.525]],["title/coverage.html",[658,3.593]],["body/coverage.html",[0,0.915,1,0.853,7,0.174,8,2.463,27,1.551,30,1.551,34,0.032,36,0.502,54,2.142,81,1.711,97,0.853,101,0.853,104,0.853,106,0.853,109,0.853,112,0.853,115,0.853,118,0.853,120,0.853,123,0.785,126,0.02,127,0.02,163,2.463,227,1.711,228,1.414,229,1.711,254,2.08,255,2.463,256,2.463,260,2.463,261,2.142,262,2.463,308,1.285,309,2.463,314,5.384,317,1.711,325,2.463,337,2.463,344,1.551,376,2.463,406,2.142,407,2.463,408,1.551,410,1.551,414,2.491,429,2.142,431,2.142,432,3.055,433,2.463,497,2.988,498,1.902,503,2.463,523,1.711,524,1.711,525,2.463,533,2.463,534,2.463,564,2.463,565,2.988,568,2.988,569,2.142,570,2.463,579,2.142,580,2.463,597,2.463,634,2.463,656,2.463,658,2.463,659,2.951,660,2.951,661,2.951,662,5.586,663,2.951,664,3.956,665,3.44,666,5.732,667,2.463,668,2.463,669,4.74,670,4.116,671,2.951,672,2.951,673,2.951,674,4.116,675,2.951,676,2.951]],["title/dependencies.html",[130,1.663,677,2.626]],["body/dependencies.html",[3,0.218,34,0.033,43,0.357,46,1.83,47,2.147,48,1.947,49,1.775,53,1.492,126,0.024,127,0.024,130,1.625,132,1.625,145,3.481,146,3.091,157,3.092,158,3.092,195,2.147,234,2.387,236,2.147,391,2.689,625,3.092,678,3.704,679,6.276,680,3.704,681,3.704,682,3.704,683,3.704,684,3.704,685,3.704,686,3.704,687,3.704,688,3.704,689,3.704,690,3.704,691,3.704,692,4.796,693,3.704,694,3.704,695,3.704,696,3.704,697,3.704,698,3.704,699,3.704,700,3.704,701,5.625,702,3.704,703,3.704,704,3.704,705,3.704]],["title/miscellaneous/functions.html",[665,2.75,706,2.192]],["body/miscellaneous/functions.html",[17,0.759,33,1.539,34,0.031,35,0.802,37,1.415,54,3.909,75,3.721,76,3.721,126,0.027,127,0.027,279,1.796,477,3.721,664,3.721,665,3.235,667,4.495,668,4.495,706,3.721,707,5.786,708,4.457,709,4.457,710,4.457]],["title/index.html",[17,0.447,711,2.626,712,2.626]],["body/index.html",[34,0.032,46,1.758,47,2.397,49,2.465,122,1.532,126,0.025,127,0.025,128,1.1,132,1.815,234,2.666,259,3.452,266,3.002,713,4.136,714,4.136,715,4.136,716,4.136,717,4.136,718,4.136,719,4.136,720,4.136,721,4.136,722,4.136,723,4.136,724,4.136,725,4.136,726,4.136,727,4.136,728,4.136,729,4.136,730,4.136,731,4.136,732,4.136,733,4.136,734,4.136,735,4.136,736,4.136,737,4.136,738,4.136,739,4.136,740,4.136,741,4.136,742,4.136,743,4.136,744,4.136,745,4.136,746,4.136]],["title/modules.html",[128,1.145]],["body/modules.html",[34,0.027,126,0.027,127,0.027,128,1.222,129,2.961,138,2.662,139,2.202,146,3.999,367,2.961,423,2.961,747,6.204,748,6.204,749,6.204]],["title/overview.html",[750,3.593]],["body/overview.html",[0,0.411,1,1.61,27,2.358,30,2.358,34,0.032,57,0.157,92,2.783,94,0.653,97,0.772,101,1.61,104,1.297,106,1.297,109,1.61,112,1.297,115,1.61,118,1.61,120,1.297,123,1.482,126,0.019,127,0.019,128,1.02,129,3.74,130,1.172,131,1.403,132,1.172,133,1.28,134,2.229,135,2.229,136,2.229,137,2.229,138,3.523,139,3.054,140,2.015,141,1.403,142,1.403,225,2.229,226,2.229,227,2.601,228,2.151,229,2.601,254,1.172,308,0.599,344,2.358,367,3.673,368,2.229,369,2.229,371,2.229,410,2.358,423,3.883,424,2.229,425,2.229,427,2.229,523,1.548,524,3.228,620,2.229,621,2.229,622,2.229,750,2.229,751,2.67,752,2.67,753,2.67,754,2.67]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/CollapseDirective.html":{},"modules/CoreModule.html":{},"interfaces/CurrentUser.html":{},"components/FieldErrorComponent.html":{},"injectables/GuidService.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"components/ManageAppComponent.html":{},"modules/ManageAppModule.html":{},"components/MenuBarComponent.html":{},"interfaces/MenuConfig.html":{},"interfaces/MenuItem.html":{},"injectables/MenuService.html":{},"pipes/MessagePipe.html":{},"injectables/MessageResolver.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"injectables/ReStorageService.html":{},"modules/SharedModule.html":{},"injectables/TitleService.html":{},"components/UserMockComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":314,"title":{},"body":{"injectables/GuidService.html":{},"coverage.html":{}}}],["0.8.26",{"_index":686,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":666,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":671,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":672,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":673,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":663,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":662,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":674,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":669,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":670,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/MenuBarComponent.html":{},"overview.html":{}}}],["1).touppercase()}${error.substr(1",{"_index":563,"title":{},"body":{"injectables/MessageResolver.html":{}}}],["1.1.20150312",{"_index":690,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["2.5.1",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["2016",{"_index":577,"title":{},"body":{"components/PageFooterComponent.html":{}}}],["2的项目快速启动，包含完善的目录结构组织、打包构建、权限、http",{"_index":718,"title":{},"body":{"index.html":{}}}],["2，@angular/cli",{"_index":715,"title":{},"body":{"index.html":{}}}],["3",{"_index":754,"title":{},"body":{"overview.html":{}}}],["3.3.7",{"_index":688,"title":{},"body":{"dependencies.html":{}}}],["3.8.1",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":696,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["403].indexof(res.statu",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["404",{"_index":729,"title":{},"body":{"index.html":{}}}],["5",{"_index":751,"title":{},"body":{"overview.html":{}}}],["576",{"_index":469,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["6.0.0",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["6.0.3",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["60000",{"_index":322,"title":{},"body":{"injectables/GuidService.html":{}}}],["7",{"_index":753,"title":{},"body":{"overview.html":{}}}],["7.0.0",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["768",{"_index":467,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["9",{"_index":752,"title":{},"body":{"overview.html":{}}}],["abstractcontrol",{"_index":290,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["accessor",{"_index":285,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["actual_compon",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{}}}],["addinterceptor",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["addresponseerrorinterceptor((r",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["admin",{"_index":364,"title":{},"body":{"components/LoginComponent.html":{},"components/PageHeaderComponent.html":{}}}],["afterviewinit",{"_index":289,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["ajax",{"_index":509,"title":{},"body":{"injectables/MenuService.html":{}}}],["angular.io中ng的styleguid",{"_index":744,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["angular/cli",{"_index":731,"title":{},"body":{"index.html":{}}}],["angular/cli的项目基础构建（分为core、share、featur",{"_index":719,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":625,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoginService.html":{}}}],["angular/compil",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/CollapseDirective.html":{},"modules/CoreModule.html":{},"components/FieldErrorComponent.html":{},"injectables/GuidService.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"components/ManageAppComponent.html":{},"modules/ManageAppModule.html":{},"components/MenuBarComponent.html":{},"injectables/MenuService.html":{},"pipes/MessagePipe.html":{},"injectables/MessageResolver.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"injectables/ReStorageService.html":{},"modules/SharedModule.html":{},"injectables/TitleService.html":{},"components/UserMockComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":195,"title":{},"body":{"directives/CollapseDirective.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/languag",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"injectables/TitleService.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"modules/ManageAppModule.html":{},"components/MenuBarComponent.html":{},"modules/SharedModule.html":{},"injectables/TitleService.html":{},"dependencies.html":{}}}],["angular/servic",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/xxx、rebirth",{"_index":732,"title":{},"body":{"index.html":{}}}],["anim",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["apisetup",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["api调用基础设置（拦截器，bas",{"_index":722,"title":{},"body":{"index.html":{}}}],["app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{}}}],["app'},{'nam",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{}}}],["app.compon",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"modules/ManageAppModule.html":{}}}],["app.component.html",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/ManageAppComponent.html":{}}}],["app.component.scss",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/ManageAppComponent.html":{}}}],["app.component.t",{"_index":407,"title":{},"body":{"components/ManageAppComponent.html":{},"coverage.html":{}}}],["app.component.ts:11",{"_index":411,"title":{},"body":{"components/ManageAppComponent.html":{}}}],["app.component.ts:15",{"_index":412,"title":{},"body":{"components/ManageAppComponent.html":{}}}],["app.module.t",{"_index":428,"title":{},"body":{"modules/ManageAppModule.html":{}}}],["app.rout",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/ManageAppModule.html":{}}}],["appcollaps",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"directives/CollapseDirective.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applicationsetup",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["appmodul",{"_index":129,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["arg",{"_index":528,"title":{},"body":{"pipes/MessagePipe.html":{}}}],["assets/common/aft",{"_index":518,"title":{},"body":{"injectables/MenuService.html":{}}}],["assets/common/document.svg",{"_index":522,"title":{},"body":{"injectables/MenuService.html":{}}}],["assets/common/sales.svg",{"_index":514,"title":{},"body":{"injectables/MenuService.html":{}}}],["author",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{}}}],["authorizationservic",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"injectables/LoginService.html":{},"injectables/MenuService.html":{}}}],["authorizationservice.setcurrentuser(us",{"_index":402,"title":{},"body":{"injectables/LoginService.html":{}}}],["authorizationservice.setstoragetype(storagetype.sessionstorag",{"_index":253,"title":{},"body":{"modules/CoreModule.html":{}}}],["auto",{"_index":224,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["awesom",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["bar",{"_index":436,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar'},{'nam",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{}}}],["bar.compon",{"_index":629,"title":{},"body":{"modules/SharedModule.html":{}}}],["bar.component.html",{"_index":438,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.scss",{"_index":437,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.t",{"_index":433,"title":{},"body":{"components/MenuBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:24",{"_index":468,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.ts:25",{"_index":470,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.ts:26",{"_index":455,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.ts:27",{"_index":454,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.ts:28",{"_index":466,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.ts:29",{"_index":472,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.ts:30",{"_index":453,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.ts:38",{"_index":456,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.ts:48",{"_index":465,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.ts:55",{"_index":458,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.ts:68",{"_index":460,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.ts:72",{"_index":464,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.ts:81",{"_index":463,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.ts:86",{"_index":457,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar/menu",{"_index":414,"title":{},"body":{"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"interfaces/MenuConfig.html":{},"interfaces/MenuItem.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["baseurl(environment.api.host",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["bearer",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["block",{"_index":217,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["bodi",{"_index":385,"title":{},"body":{"injectables/LoginService.html":{}}}],["boolean",{"_index":181,"title":{},"body":{"directives/CollapseDirective.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{}}}],["bootstrap",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/LoginModule.html":{},"modules/ManageAppModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["brows",{"_index":749,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"injectables/TitleService.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["chang",{"_index":189,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["changedetect",{"_index":571,"title":{},"body":{"components/PageFooterComponent.html":{}}}],["changedetectionstrategi",{"_index":576,"title":{},"body":{"components/PageFooterComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":572,"title":{},"body":{"components/PageFooterComponent.html":{}}}],["children",{"_index":502,"title":{},"body":{"interfaces/MenuConfig.html":{},"interfaces/MenuItem.html":{},"injectables/MenuService.html":{}}}],["children.nam",{"_index":496,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["childrout",{"_index":652,"title":{},"body":{"injectables/TitleService.html":{}}}],["childroute.data",{"_index":654,"title":{},"body":{"injectables/TitleService.html":{}}}],["childroute.firstchild",{"_index":655,"title":{},"body":{"injectables/TitleService.html":{}}}],["ci",{"_index":736,"title":{},"body":{"index.html":{}}}],["class",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/CollapseDirective.html":{},"modules/CoreModule.html":{},"components/FieldErrorComponent.html":{},"injectables/GuidService.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"components/ManageAppComponent.html":{},"modules/ManageAppModule.html":{},"components/MenuBarComponent.html":{},"injectables/MenuService.html":{},"pipes/MessagePipe.html":{},"injectables/MessageResolver.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"injectables/ReStorageService.html":{},"modules/SharedModule.html":{},"injectables/TitleService.html":{},"components/UserMockComponent.html":{}}}],["class.collaps",{"_index":199,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["classlist.j",{"_index":689,"title":{},"body":{"dependencies.html":{}}}],["clear",{"_index":599,"title":{},"body":{"injectables/ReStorageService.html":{}}}],["cluster_appmodul",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_coremodul",{"_index":225,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_provid",{"_index":226,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_loginmodul",{"_index":368,"title":{},"body":{"modules/LoginModule.html":{},"overview.html":{}}}],["cluster_loginmodule_declar",{"_index":369,"title":{},"body":{"modules/LoginModule.html":{},"overview.html":{}}}],["cluster_loginmodule_import",{"_index":370,"title":{},"body":{"modules/LoginModule.html":{}}}],["cluster_loginmodule_provid",{"_index":371,"title":{},"body":{"modules/LoginModule.html":{},"overview.html":{}}}],["cluster_manageappmodul",{"_index":424,"title":{},"body":{"modules/ManageAppModule.html":{},"overview.html":{}}}],["cluster_manageappmodule_declar",{"_index":425,"title":{},"body":{"modules/ManageAppModule.html":{},"overview.html":{}}}],["cluster_manageappmodule_import",{"_index":426,"title":{},"body":{"modules/ManageAppModule.html":{}}}],["cluster_manageappmodule_provid",{"_index":427,"title":{},"body":{"modules/ManageAppModule.html":{},"overview.html":{}}}],["cluster_sharedmodul",{"_index":620,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":621,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":622,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["collaps",{"_index":207,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["collapse/collapse.direct",{"_index":630,"title":{},"body":{"modules/SharedModule.html":{}}}],["collapsedirect",{"_index":123,"title":{"directives/CollapseDirective.html":{}},"body":{"components/AppComponent.html":{},"directives/CollapseDirective.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"modules/SharedModule.html":{},"components/UserMockComponent.html":{},"coverage.html":{},"overview.html":{}}}],["commonmodul",{"_index":624,"title":{},"body":{"modules/SharedModule.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{}}}],["config",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["config.model",{"_index":415,"title":{},"body":{"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{}}}],["config.model.t",{"_index":497,"title":{},"body":{"interfaces/MenuConfig.html":{},"interfaces/MenuItem.html":{},"coverage.html":{}}}],["const",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"injectables/GuidService.html":{},"injectables/LoginService.html":{},"components/MenuBarComponent.html":{},"injectables/MessageResolver.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"directives/CollapseDirective.html":{},"components/FieldErrorComponent.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MenuService.html":{},"injectables/ReStorageService.html":{},"injectables/TitleService.html":{}}}],["constructor(authorizationservic",{"_index":249,"title":{},"body":{"modules/CoreModule.html":{},"injectables/MenuService.html":{}}}],["constructor(elementref",{"_index":178,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["constructor(fb",{"_index":342,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(http",{"_index":378,"title":{},"body":{"injectables/LoginService.html":{}}}],["constructor(menuservic",{"_index":409,"title":{},"body":{"components/ManageAppComponent.html":{}}}],["constructor(ngform",{"_index":273,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["constructor(overlayservic",{"_index":326,"title":{},"body":{"injectables/LoadingService.html":{}}}],["constructor(priv",{"_index":331,"title":{},"body":{"injectables/LoadingService.html":{},"components/ManageAppComponent.html":{},"injectables/MenuService.html":{},"pipes/MessagePipe.html":{},"injectables/ReStorageService.html":{},"injectables/TitleService.html":{}}}],["constructor(rebirthngconfig",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(rout",{"_index":451,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["constructor(storageservic",{"_index":602,"title":{},"body":{"injectables/ReStorageService.html":{}}}],["constructor(titl",{"_index":637,"title":{},"body":{"injectables/TitleService.html":{}}}],["content",{"_index":422,"title":{},"body":{"components/ManageAppComponent.html":{}}}],["control",{"_index":296,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["control.error",{"_index":300,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["control.geterror(key",{"_index":307,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["control.invalid",{"_index":299,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["control.touch",{"_index":298,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["core",{"_index":691,"title":{},"body":{"dependencies.html":{}}}],["core/core.modul",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["core/loading/load",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["core/loading/loading.servic",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["core/message/messag",{"_index":291,"title":{},"body":{"components/FieldErrorComponent.html":{},"pipes/MessagePipe.html":{}}}],["core/title/title.servic",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["coremodul",{"_index":138,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coverag",{"_index":658,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["currentus",{"_index":81,"title":{"interfaces/CurrentUser.html":{}},"body":{"components/AppComponent.html":{},"interfaces/CurrentUser.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["currentuser.token",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["data.nam",{"_index":495,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["date",{"_index":318,"title":{},"body":{"injectables/GuidService.html":{}}}],["date(now.gettim",{"_index":320,"title":{},"body":{"injectables/GuidService.html":{}}}],["debouncetim",{"_index":473,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["declar",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/LoginModule.html":{},"modules/ManageAppModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["decor",{"_index":382,"title":{},"body":{"injectables/LoginService.html":{},"components/PageHeaderComponent.html":{}}}],["default",{"_index":278,"title":{},"body":{"components/FieldErrorComponent.html":{},"injectables/GuidService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MessageResolver.html":{},"components/PageHeaderComponent.html":{},"injectables/ReStorageService.html":{}}}],["defin",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"directives/CollapseDirective.html":{},"components/FieldErrorComponent.html":{},"injectables/GuidService.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MenuService.html":{},"pipes/MessagePipe.html":{},"injectables/MessageResolver.html":{},"components/PageHeaderComponent.html":{},"injectables/ReStorageService.html":{},"injectables/TitleService.html":{}}}],["depend",{"_index":130,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/LoginModule.html":{},"modules/ManageAppModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["differ",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["direct",{"_index":97,"title":{"directives/CollapseDirective.html":{}},"body":{"components/AppComponent.html":{},"directives/CollapseDirective.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{},"coverage.html":{},"overview.html":{}}}],["display",{"_index":201,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["distinctuntilchang",{"_index":474,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["document",{"_index":659,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{}}}],["dummymenu",{"_index":504,"title":{},"body":{"injectables/MenuService.html":{}}}],["dummynam",{"_index":584,"title":{},"body":{"components/PageHeaderComponent.html":{}}}],["dynam",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":737,"title":{},"body":{"index.html":{}}}],["each",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["element",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{}}}],["elementref",{"_index":169,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["enabl",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["environ",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"injectables/TitleService.html":{}}}],["environment.product",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.titl",{"_index":349,"title":{},"body":{"components/LoginComponent.html":{},"injectables/TitleService.html":{}}}],["environments/environ",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"injectables/TitleService.html":{}}}],["error",{"_index":266,"title":{},"body":{"components/FieldErrorComponent.html":{},"injectables/MessageResolver.html":{},"index.html":{}}}],["error'},{'nam",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{}}}],["error.compon",{"_index":631,"title":{},"body":{"modules/SharedModule.html":{}}}],["error.component.html",{"_index":268,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["error.component.scss",{"_index":267,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["error.component.t",{"_index":262,"title":{},"body":{"components/FieldErrorComponent.html":{},"coverage.html":{}}}],["error.component.ts:23",{"_index":277,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["error.component.ts:24",{"_index":281,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["error.component.ts:25",{"_index":276,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["error.component.ts:33",{"_index":283,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["error.component.ts:39",{"_index":288,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["error.component.ts:47",{"_index":282,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["error.substr(0",{"_index":562,"title":{},"body":{"injectables/MessageResolver.html":{}}}],["error/field",{"_index":261,"title":{},"body":{"components/FieldErrorComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["event",{"_index":236,"title":{},"body":{"modules/CoreModule.html":{},"components/MenuBarComponent.html":{},"components/PageHeaderComponent.html":{},"injectables/TitleService.html":{},"dependencies.html":{}}}],["event.preventdefault",{"_index":493,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["event.state.root.data",{"_index":651,"title":{},"body":{"injectables/TitleService.html":{}}}],["event.state.root.firstchild",{"_index":653,"title":{},"body":{"injectables/TitleService.html":{}}}],["eventemitt",{"_index":471,"title":{},"body":{"components/MenuBarComponent.html":{},"components/PageHeaderComponent.html":{}}}],["expand",{"_index":205,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["export",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/CollapseDirective.html":{},"modules/CoreModule.html":{},"interfaces/CurrentUser.html":{},"components/FieldErrorComponent.html":{},"injectables/GuidService.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"components/ManageAppComponent.html":{},"modules/ManageAppModule.html":{},"components/MenuBarComponent.html":{},"interfaces/MenuConfig.html":{},"interfaces/MenuItem.html":{},"injectables/MenuService.html":{},"pipes/MessagePipe.html":{},"injectables/MessageResolver.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"injectables/ReStorageService.html":{},"modules/SharedModule.html":{},"injectables/TitleService.html":{},"components/UserMockComponent.html":{},"overview.html":{}}}],["exporta",{"_index":264,"title":{},"body":{"components/FieldErrorComponent.html":{},"components/MenuBarComponent.html":{}}}],["extend",{"_index":397,"title":{},"body":{"injectables/LoginService.html":{}}}],["fa",{"_index":512,"title":{},"body":{"injectables/MenuService.html":{}}}],["fals",{"_index":214,"title":{},"body":{"directives/CollapseDirective.html":{},"components/FieldErrorComponent.html":{},"components/MenuBarComponent.html":{}}}],["fb",{"_index":346,"title":{},"body":{"components/LoginComponent.html":{}}}],["fb.group",{"_index":354,"title":{},"body":{"components/LoginComponent.html":{}}}],["field",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MessageResolver.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"modules/SharedModule.html":{},"components/UserMockComponent.html":{}}}],["fielderror",{"_index":265,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["fielderrorcompon",{"_index":101,"title":{"components/FieldErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"modules/SharedModule.html":{},"components/UserMockComponent.html":{},"coverage.html":{},"overview.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/CollapseDirective.html":{},"modules/CoreModule.html":{},"interfaces/CurrentUser.html":{},"components/FieldErrorComponent.html":{},"injectables/GuidService.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"components/ManageAppComponent.html":{},"modules/ManageAppModule.html":{},"components/MenuBarComponent.html":{},"interfaces/MenuConfig.html":{},"interfaces/MenuItem.html":{},"injectables/MenuService.html":{},"pipes/MessagePipe.html":{},"injectables/MessageResolver.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"injectables/ReStorageService.html":{},"modules/SharedModule.html":{},"injectables/TitleService.html":{},"components/UserMockComponent.html":{},"coverage.html":{}}}],["filter",{"_index":643,"title":{},"body":{"injectables/TitleService.html":{}}}],["filter(ev",{"_index":645,"title":{},"body":{"injectables/TitleService.html":{}}}],["first",{"_index":303,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["font",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["fontawesom",{"_index":727,"title":{},"body":{"index.html":{}}}],["footer",{"_index":573,"title":{},"body":{"components/PageFooterComponent.html":{}}}],["footer'},{'nam",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{}}}],["footer.compon",{"_index":632,"title":{},"body":{"modules/SharedModule.html":{}}}],["footer.component.t",{"_index":570,"title":{},"body":{"components/PageFooterComponent.html":{},"coverage.html":{}}}],["footer.html",{"_index":575,"title":{},"body":{"components/PageFooterComponent.html":{}}}],["footer.scss",{"_index":574,"title":{},"body":{"components/PageFooterComponent.html":{}}}],["footer/pag",{"_index":569,"title":{},"body":{"components/PageFooterComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["formatmessag",{"_index":536,"title":{},"body":{"injectables/MessageResolver.html":{}}}],["formatmessage(messag",{"_index":539,"title":{},"body":{"injectables/MessageResolver.html":{}}}],["formbuild",{"_index":343,"title":{},"body":{"components/LoginComponent.html":{}}}],["formgroup",{"_index":284,"title":{},"body":{"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{}}}],["formgroupdirect",{"_index":275,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["formsmodul",{"_index":626,"title":{},"body":{"modules/SharedModule.html":{}}}],["forwardref",{"_index":193,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["found、500",{"_index":730,"title":{},"body":{"index.html":{}}}],["fromgroup",{"_index":269,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["function",{"_index":665,"title":{"miscellaneous/functions.html":{}},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["get",{"_index":711,"title":{"index.html":{}},"body":{}}],["get(key",{"_index":606,"title":{},"body":{"injectables/ReStorageService.html":{}}}],["getclassnam",{"_index":445,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["geterrormessag",{"_index":270,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["getinvalid",{"_index":287,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["getmenuconfig",{"_index":418,"title":{},"body":{"components/ManageAppComponent.html":{},"injectables/MenuService.html":{}}}],["getmessag",{"_index":537,"title":{},"body":{"injectables/MessageResolver.html":{}}}],["getmessage(msgkey",{"_index":542,"title":{},"body":{"injectables/MessageResolver.html":{}}}],["getroutetitl",{"_index":635,"title":{},"body":{"injectables/TitleService.html":{}}}],["getroutetitle(ev",{"_index":639,"title":{},"body":{"injectables/TitleService.html":{}}}],["getvalidationmessag",{"_index":538,"title":{},"body":{"injectables/MessageResolver.html":{}}}],["getvalidationmessage(field",{"_index":545,"title":{},"body":{"injectables/MessageResolver.html":{}}}],["gi",{"_index":560,"title":{},"body":{"injectables/MessageResolver.html":{}}}],["greengerong/@rebirth/admin",{"_index":578,"title":{},"body":{"components/PageFooterComponent.html":{}}}],["guid/guid.servic",{"_index":240,"title":{},"body":{"modules/CoreModule.html":{}}}],["guidservic",{"_index":227,"title":{"injectables/GuidService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/GuidService.html":{},"coverage.html":{},"overview.html":{}}}],["handleexpandclick",{"_index":586,"title":{},"body":{"components/PageHeaderComponent.html":{}}}],["header",{"_index":581,"title":{},"body":{"components/PageHeaderComponent.html":{}}}],["header'},{'nam",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{}}}],["header.compon",{"_index":628,"title":{},"body":{"modules/SharedModule.html":{}}}],["header.component.html",{"_index":583,"title":{},"body":{"components/PageHeaderComponent.html":{}}}],["header.component.scss",{"_index":582,"title":{},"body":{"components/PageHeaderComponent.html":{}}}],["header.component.t",{"_index":580,"title":{},"body":{"components/PageHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:11",{"_index":593,"title":{},"body":{"components/PageHeaderComponent.html":{}}}],["header.component.ts:12",{"_index":591,"title":{},"body":{"components/PageHeaderComponent.html":{}}}],["header.component.ts:14",{"_index":590,"title":{},"body":{"components/PageHeaderComponent.html":{}}}],["header.component.ts:9",{"_index":589,"title":{},"body":{"components/PageHeaderComponent.html":{}}}],["header/pag",{"_index":579,"title":{},"body":{"components/PageHeaderComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["height",{"_index":223,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["hide",{"_index":171,"title":{},"body":{"directives/CollapseDirective.html":{},"injectables/LoadingService.html":{},"components/MenuBarComponent.html":{}}}],["home",{"_index":513,"title":{},"body":{"injectables/MenuService.html":{}}}],["host",{"_index":198,"title":{},"body":{"directives/CollapseDirective.html":{},"components/MenuBarComponent.html":{}}}],["hostbind",{"_index":176,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["hostbinding('attr.aria",{"_index":204,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["hostbinding('class.in",{"_index":202,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["hostbinding('class.show",{"_index":203,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["hostbinding('style.display",{"_index":200,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["html",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{}}}],["http",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"injectables/LoginService.html":{},"dependencies.html":{},"index.html":{}}}],["httpclient",{"_index":379,"title":{},"body":{"injectables/LoginService.html":{}}}],["httperrorrespons",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["http、rebirth",{"_index":733,"title":{},"body":{"index.html":{}}}],["http的全局jwt",{"_index":728,"title":{},"body":{"index.html":{}}}],["i18n",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["icon",{"_index":481,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["iconmenuclass",{"_index":479,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["id",{"_index":257,"title":{},"body":{"interfaces/CurrentUser.html":{}}}],["identifi",{"_index":660,"title":{},"body":{"coverage.html":{}}}],["ignoreload",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["ignoreloading(request",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/functions.html":{}}}],["immut",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["implement",{"_index":164,"title":{},"body":{"directives/CollapseDirective.html":{},"components/FieldErrorComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"pipes/MessagePipe.html":{}}}],["import",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/CollapseDirective.html":{},"modules/CoreModule.html":{},"components/FieldErrorComponent.html":{},"injectables/GuidService.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"components/ManageAppComponent.html":{},"modules/ManageAppModule.html":{},"components/MenuBarComponent.html":{},"injectables/MenuService.html":{},"pipes/MessagePipe.html":{},"injectables/MessageResolver.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"injectables/ReStorageService.html":{},"modules/SharedModule.html":{},"injectables/TitleService.html":{},"components/UserMockComponent.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"directives/CollapseDirective.html":{},"interfaces/CurrentUser.html":{},"components/FieldErrorComponent.html":{},"injectables/GuidService.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"interfaces/MenuConfig.html":{},"interfaces/MenuItem.html":{},"injectables/MenuService.html":{},"injectables/MessageResolver.html":{},"components/PageHeaderComponent.html":{},"injectables/ReStorageService.html":{},"injectables/TitleService.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/CollapseDirective.html":{},"modules/CoreModule.html":{},"interfaces/CurrentUser.html":{},"components/FieldErrorComponent.html":{},"injectables/GuidService.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"components/ManageAppComponent.html":{},"modules/ManageAppModule.html":{},"components/MenuBarComponent.html":{},"interfaces/MenuConfig.html":{},"interfaces/MenuItem.html":{},"injectables/MenuService.html":{},"pipes/MessagePipe.html":{},"injectables/MessageResolver.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"injectables/ReStorageService.html":{},"modules/SharedModule.html":{},"injectables/TitleService.html":{},"components/UserMockComponent.html":{}}}],["inject",{"_index":308,"title":{"injectables/GuidService.html":{},"injectables/LoadingService.html":{},"injectables/LoginService.html":{},"injectables/MenuService.html":{},"injectables/MessageResolver.html":{},"injectables/ReStorageService.html":{},"injectables/TitleService.html":{}},"body":{"injectables/GuidService.html":{},"injectables/LoadingService.html":{},"injectables/LoginService.html":{},"injectables/MenuService.html":{},"injectables/MessageResolver.html":{},"injectables/ReStorageService.html":{},"injectables/TitleService.html":{},"coverage.html":{},"overview.html":{}}}],["innerlogin",{"_index":377,"title":{},"body":{"injectables/LoginService.html":{}}}],["innerlogin(@bodi",{"_index":405,"title":{},"body":{"injectables/LoginService.html":{}}}],["innerlogin(bodi",{"_index":381,"title":{},"body":{"injectables/LoginService.html":{}}}],["input",{"_index":175,"title":{},"body":{"directives/CollapseDirective.html":{},"components/FieldErrorComponent.html":{},"components/MenuBarComponent.html":{}}}],["input('appcollaps",{"_index":206,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["instanceof",{"_index":646,"title":{},"body":{"injectables/TitleService.html":{}}}],["interfac",{"_index":254,"title":{"interfaces/CurrentUser.html":{},"interfaces/MenuConfig.html":{},"interfaces/MenuItem.html":{}},"body":{"interfaces/CurrentUser.html":{},"interfaces/MenuConfig.html":{},"interfaces/MenuItem.html":{},"coverage.html":{},"overview.html":{}}}],["invalid",{"_index":286,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["isiconmenubaropen",{"_index":439,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["istextmenubaropen",{"_index":450,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["isundefin",{"_index":667,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isundefined(valu",{"_index":709,"title":{},"body":{"miscellaneous/functions.html":{}}}],["js",{"_index":692,"title":{},"body":{"dependencies.html":{}}}],["json或t",{"_index":739,"title":{},"body":{"index.html":{}}}],["key",{"_index":301,"title":{},"body":{"components/FieldErrorComponent.html":{},"injectables/MessageResolver.html":{},"injectables/ReStorageService.html":{}}}],["label",{"_index":272,"title":{},"body":{"components/FieldErrorComponent.html":{},"injectables/MessageResolver.html":{}}}],["lazyload",{"_index":720,"title":{},"body":{"index.html":{}}}],["legend",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"components/ManageAppComponent.html":{},"modules/ManageAppModule.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"modules/SharedModule.html":{},"components/UserMockComponent.html":{},"overview.html":{}}}],["link",{"_index":499,"title":{},"body":{"interfaces/MenuConfig.html":{},"interfaces/MenuItem.html":{},"injectables/MenuService.html":{}}}],["listen",{"_index":440,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["liter",{"_index":388,"title":{},"body":{"injectables/LoginService.html":{},"injectables/MessageResolver.html":{}}}],["load",{"_index":668,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["loading(open",{"_index":710,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loading(tru",{"_index":404,"title":{},"body":{"injectables/LoginService.html":{}}}],["loading/loading.servic",{"_index":241,"title":{},"body":{"modules/CoreModule.html":{}}}],["loadingservic",{"_index":27,"title":{"injectables/LoadingService.html":{}},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"injectables/LoadingService.html":{},"coverage.html":{},"overview.html":{}}}],["loading设置，每次api请求都需要显示loading（包装@rebirth/ng的overlayservic",{"_index":724,"title":{},"body":{"index.html":{}}}],["localstorag",{"_index":251,"title":{},"body":{"modules/CoreModule.html":{}}}],["login",{"_index":248,"title":{},"body":{"modules/CoreModule.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["login'},{'nam",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{}}}],["login(logininfo",{"_index":387,"title":{},"body":{"injectables/LoginService.html":{}}}],["login(this.loginform.valu",{"_index":360,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.compon",{"_index":373,"title":{},"body":{"modules/LoginModule.html":{}}}],["login.component.html",{"_index":339,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":338,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.rout",{"_index":374,"title":{},"body":{"modules/LoginModule.html":{}}}],["login.servic",{"_index":352,"title":{},"body":{"components/LoginComponent.html":{},"modules/LoginModule.html":{}}}],["logincompon",{"_index":104,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":340,"title":{},"body":{"components/LoginComponent.html":{}}}],["logininfo",{"_index":390,"title":{},"body":{"injectables/LoginService.html":{}}}],["loginmodul",{"_index":367,"title":{"modules/LoginModule.html":{}},"body":{"modules/LoginModule.html":{},"modules.html":{},"overview.html":{}}}],["loginpag",{"_index":247,"title":{},"body":{"modules/CoreModule.html":{}}}],["loginservic",{"_index":344,"title":{"injectables/LoginService.html":{}},"body":{"components/LoginComponent.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"coverage.html":{},"overview.html":{}}}],["logo、menu",{"_index":738,"title":{},"body":{"index.html":{}}}],["main",{"_index":421,"title":{},"body":{"components/ManageAppComponent.html":{}}}],["manag",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"modules/ManageAppModule.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{}}}],["manage/docu",{"_index":521,"title":{},"body":{"injectables/MenuService.html":{}}}],["manage/hom",{"_index":511,"title":{},"body":{"injectables/MenuService.html":{}}}],["manage/ord",{"_index":515,"title":{},"body":{"injectables/MenuService.html":{}}}],["manage/order/list",{"_index":516,"title":{},"body":{"injectables/MenuService.html":{}}}],["manage/us",{"_index":517,"title":{},"body":{"injectables/MenuService.html":{}}}],["manage/user/list",{"_index":520,"title":{},"body":{"injectables/MenuService.html":{}}}],["manageappcompon",{"_index":106,"title":{"components/ManageAppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"modules/ManageAppModule.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{},"coverage.html":{},"overview.html":{}}}],["manageappmodul",{"_index":423,"title":{"modules/ManageAppModule.html":{}},"body":{"modules/ManageAppModule.html":{},"modules.html":{},"overview.html":{}}}],["map",{"_index":395,"title":{},"body":{"injectables/LoginService.html":{},"injectables/TitleService.html":{}}}],["map((ev",{"_index":647,"title":{},"body":{"injectables/TitleService.html":{}}}],["map(us",{"_index":401,"title":{},"body":{"injectables/LoginService.html":{}}}],["match",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/CollapseDirective.html":{},"modules/CoreModule.html":{},"interfaces/CurrentUser.html":{},"components/FieldErrorComponent.html":{},"injectables/GuidService.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"components/ManageAppComponent.html":{},"modules/ManageAppModule.html":{},"components/MenuBarComponent.html":{},"interfaces/MenuConfig.html":{},"interfaces/MenuItem.html":{},"injectables/MenuService.html":{},"pipes/MessagePipe.html":{},"injectables/MessageResolver.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"injectables/ReStorageService.html":{},"modules/SharedModule.html":{},"injectables/TitleService.html":{},"components/UserMockComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["max_middle_screen",{"_index":442,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["memori",{"_index":252,"title":{},"body":{"modules/CoreModule.html":{}}}],["menu",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"interfaces/MenuConfig.html":{},"interfaces/MenuItem.html":{},"injectables/MenuService.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"modules/SharedModule.html":{},"components/UserMockComponent.html":{}}}],["menu.servic",{"_index":416,"title":{},"body":{"components/ManageAppComponent.html":{},"modules/ManageAppModule.html":{}}}],["menubar",{"_index":435,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["menubarcompon",{"_index":109,"title":{"components/MenuBarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"modules/SharedModule.html":{},"components/UserMockComponent.html":{},"coverage.html":{},"overview.html":{}}}],["menubarcomponent.max_middle_screen",{"_index":483,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["menubarcomponent.min_middle_screen",{"_index":484,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["menuconfig",{"_index":408,"title":{"interfaces/MenuConfig.html":{}},"body":{"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"interfaces/MenuConfig.html":{},"interfaces/MenuItem.html":{},"coverage.html":{}}}],["menuitem",{"_index":498,"title":{"interfaces/MenuItem.html":{}},"body":{"interfaces/MenuConfig.html":{},"interfaces/MenuItem.html":{},"coverage.html":{}}}],["menuservic",{"_index":410,"title":{"injectables/MenuService.html":{}},"body":{"components/ManageAppComponent.html":{},"modules/ManageAppModule.html":{},"injectables/MenuService.html":{},"coverage.html":{},"overview.html":{}}}],["messag",{"_index":366,"title":{},"body":{"components/LoginComponent.html":{},"pipes/MessagePipe.html":{},"injectables/MessageResolver.html":{}}}],["message/messag",{"_index":242,"title":{},"body":{"modules/CoreModule.html":{}}}],["message/message.pip",{"_index":633,"title":{},"body":{"modules/SharedModule.html":{}}}],["messagepip",{"_index":524,"title":{"pipes/MessagePipe.html":{}},"body":{"pipes/MessagePipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["messageresolv",{"_index":228,"title":{"injectables/MessageResolver.html":{}},"body":{"modules/CoreModule.html":{},"components/FieldErrorComponent.html":{},"pipes/MessagePipe.html":{},"injectables/MessageResolver.html":{},"coverage.html":{},"overview.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"directives/CollapseDirective.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"pipes/MessagePipe.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{}}}],["method",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"directives/CollapseDirective.html":{},"components/FieldErrorComponent.html":{},"injectables/GuidService.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MenuService.html":{},"pipes/MessagePipe.html":{},"injectables/MessageResolver.html":{},"components/PageHeaderComponent.html":{},"injectables/ReStorageService.html":{},"injectables/TitleService.html":{}}}],["min_middle_screen",{"_index":443,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["miscellan",{"_index":706,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mock",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{},"index.html":{}}}],["mock'},{'nam",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{}}}],["mock.compon",{"_index":430,"title":{},"body":{"modules/ManageAppModule.html":{}}}],["mock.component.html",{"_index":567,"title":{},"body":{"components/OrderMockComponent.html":{},"components/UserMockComponent.html":{}}}],["mock.component.scss",{"_index":566,"title":{},"body":{"components/OrderMockComponent.html":{},"components/UserMockComponent.html":{}}}],["mock.component.t",{"_index":565,"title":{},"body":{"components/OrderMockComponent.html":{},"components/UserMockComponent.html":{},"coverage.html":{}}}],["mock/ord",{"_index":429,"title":{},"body":{"modules/ManageAppModule.html":{},"components/OrderMockComponent.html":{},"coverage.html":{}}}],["mock/us",{"_index":431,"title":{},"body":{"modules/ManageAppModule.html":{},"components/UserMockComponent.html":{},"coverage.html":{}}}],["modal退出确认，并清除rebirth",{"_index":725,"title":{},"body":{"index.html":{}}}],["modul",{"_index":128,"title":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/LoginModule.html":{},"modules/ManageAppModule.html":{},"modules/SharedModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/LoginModule.html":{},"modules/ManageAppModule.html":{},"modules/SharedModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["msg",{"_index":557,"title":{},"body":{"injectables/MessageResolver.html":{}}}],["msg.replace(new",{"_index":558,"title":{},"body":{"injectables/MessageResolver.html":{}}}],["msgkey",{"_index":544,"title":{},"body":{"injectables/MessageResolver.html":{}}}],["msgparam",{"_index":550,"title":{},"body":{"injectables/MessageResolver.html":{}}}],["multi",{"_index":197,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["name",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"directives/CollapseDirective.html":{},"interfaces/CurrentUser.html":{},"components/FieldErrorComponent.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"interfaces/MenuConfig.html":{},"interfaces/MenuItem.html":{},"injectables/MenuService.html":{},"pipes/MessagePipe.html":{},"injectables/MessageResolver.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"injectables/ReStorageService.html":{},"injectables/TitleService.html":{},"components/UserMockComponent.html":{},"miscellaneous/functions.html":{}}}],["nbsp;{{dummynam",{"_index":596,"title":{},"body":{"components/PageHeaderComponent.html":{}}}],["new",{"_index":317,"title":{},"body":{"injectables/GuidService.html":{},"injectables/LoadingService.html":{},"components/MenuBarComponent.html":{},"components/PageHeaderComponent.html":{},"coverage.html":{}}}],["newid",{"_index":311,"title":{},"body":{"injectables/GuidService.html":{}}}],["ng",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"injectables/LoadingService.html":{},"components/MenuBarComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["ng2代码文档（compodoc",{"_index":743,"title":{},"body":{"index.html":{}}}],["ng_value_accessor",{"_index":194,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["ngform",{"_index":274,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["ngmodul",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/LoginModule.html":{},"modules/ManageAppModule.html":{},"modules/SharedModule.html":{}}}],["ngonchang",{"_index":172,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["ngonchanges(chang",{"_index":186,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["ngondestroy",{"_index":446,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["ngoninit",{"_index":271,"title":{},"body":{"components/FieldErrorComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{}}}],["none",{"_index":216,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["normalize.css",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["now",{"_index":316,"title":{},"body":{"injectables/GuidService.html":{}}}],["now.gettimezoneoffset",{"_index":321,"title":{},"body":{"injectables/GuidService.html":{}}}],["null",{"_index":280,"title":{},"body":{"components/FieldErrorComponent.html":{},"injectables/LoginService.html":{}}}],["number",{"_index":313,"title":{},"body":{"injectables/GuidService.html":{},"components/MenuBarComponent.html":{}}}],["object.keys(control.errors)[0",{"_index":302,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["object.keys(params).reduc",{"_index":556,"title":{},"body":{"injectables/MessageResolver.html":{}}}],["observ",{"_index":386,"title":{},"body":{"injectables/LoginService.html":{},"injectables/MenuService.html":{}}}],["onchang",{"_index":165,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["ondestroy",{"_index":434,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["onexpand",{"_index":588,"title":{},"body":{"components/PageHeaderComponent.html":{}}}],["oninit",{"_index":263,"title":{},"body":{"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{}}}],["open",{"_index":477,"title":{},"body":{"components/MenuBarComponent.html":{},"miscellaneous/functions.html":{}}}],["option",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"directives/CollapseDirective.html":{},"components/FieldErrorComponent.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"interfaces/MenuItem.html":{},"injectables/MenuService.html":{},"pipes/MessagePipe.html":{},"injectables/MessageResolver.html":{},"injectables/ReStorageService.html":{},"injectables/TitleService.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"modules/ManageAppModule.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{}}}],["ordermockcompon",{"_index":112,"title":{"components/OrderMockComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"modules/ManageAppModule.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{},"coverage.html":{},"overview.html":{}}}],["out",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/LoginModule.html":{},"modules/ManageAppModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["output",{"_index":587,"title":{},"body":{"components/PageHeaderComponent.html":{}}}],["overflow",{"_index":220,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["overlayservic",{"_index":327,"title":{},"body":{"injectables/LoadingService.html":{}}}],["overview",{"_index":750,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":677,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"modules/SharedModule.html":{},"components/UserMockComponent.html":{}}}],["pagefootercompon",{"_index":115,"title":{"components/PageFooterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"modules/SharedModule.html":{},"components/UserMockComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pageheadercompon",{"_index":118,"title":{"components/PageHeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"modules/SharedModule.html":{},"components/UserMockComponent.html":{},"coverage.html":{},"overview.html":{}}}],["param",{"_index":540,"title":{},"body":{"injectables/MessageResolver.html":{}}}],["paramet",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"directives/CollapseDirective.html":{},"components/FieldErrorComponent.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MenuService.html":{},"pipes/MessagePipe.html":{},"injectables/MessageResolver.html":{},"injectables/ReStorageService.html":{},"injectables/TitleService.html":{},"miscellaneous/functions.html":{}}}],["params[key].tostr",{"_index":561,"title":{},"body":{"injectables/MessageResolver.html":{}}}],["password",{"_index":357,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["path",{"_index":461,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["permiss",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"injectables/LoginService.html":{},"injectables/MenuService.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"index.html":{}}}],["permission、rebirth",{"_index":734,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":523,"title":{"pipes/MessagePipe.html":{}},"body":{"pipes/MessagePipe.html":{},"injectables/TitleService.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(debouncetime(200",{"_index":487,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["pipetransform",{"_index":531,"title":{},"body":{"pipes/MessagePipe.html":{}}}],["platform",{"_index":741,"title":{},"body":{"index.html":{}}}],["pool",{"_index":615,"title":{},"body":{"injectables/ReStorageService.html":{}}}],["post",{"_index":383,"title":{},"body":{"injectables/LoginService.html":{}}}],["post('login",{"_index":403,"title":{},"body":{"injectables/LoginService.html":{}}}],["privat",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MenuBarComponent.html":{},"injectables/MenuService.html":{},"injectables/MessageResolver.html":{},"injectables/TitleService.html":{}}}],["promise(resolv",{"_index":332,"title":{},"body":{"injectables/LoadingService.html":{}}}],["properti",{"_index":167,"title":{},"body":{"directives/CollapseDirective.html":{},"interfaces/CurrentUser.html":{},"components/FieldErrorComponent.html":{},"injectables/GuidService.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"interfaces/MenuConfig.html":{},"interfaces/MenuItem.html":{},"injectables/MessageResolver.html":{},"components/PageHeaderComponent.html":{},"injectables/ReStorageService.html":{}}}],["protect",{"_index":168,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["provid",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"directives/CollapseDirective.html":{},"modules/CoreModule.html":{},"modules/LoginModule.html":{},"modules/ManageAppModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["reactiveformsmodul",{"_index":627,"title":{},"body":{"modules/SharedModule.html":{}}}],["rebirth",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MenuBarComponent.html":{},"injectables/MenuService.html":{},"components/PageHeaderComponent.html":{},"injectables/ReStorageService.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"index.html":{}}}],["rebirth/ng",{"_index":721,"title":{},"body":{"index.html":{}}}],["rebirth/ng，bootstrap",{"_index":716,"title":{},"body":{"index.html":{}}}],["rebirthadmin",{"_index":713,"title":{},"body":{"index.html":{}}}],["rebirthadmin是一套基于angular",{"_index":714,"title":{},"body":{"index.html":{}}}],["rebirtheventsourcemodul",{"_index":235,"title":{},"body":{"modules/CoreModule.html":{}}}],["rebirthhttp",{"_index":392,"title":{},"body":{"injectables/LoginService.html":{}}}],["rebirthhttpmodul",{"_index":231,"title":{},"body":{"modules/CoreModule.html":{}}}],["rebirthhttpprovid",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["rebirthngconfig",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["rebirthngmodul",{"_index":237,"title":{},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["rebirthngmodule.forroot",{"_index":245,"title":{},"body":{"modules/CoreModule.html":{}}}],["rebirthpermissionmodul",{"_index":238,"title":{},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["rebirthpermissionmodule.forroot",{"_index":246,"title":{},"body":{"modules/CoreModule.html":{}}}],["rebirthstoragemodul",{"_index":232,"title":{},"body":{"modules/CoreModule.html":{}}}],["regexp(`{${key",{"_index":559,"title":{},"body":{"injectables/MessageResolver.html":{}}}],["regist",{"_index":636,"title":{},"body":{"injectables/TitleService.html":{}}}],["remov",{"_index":600,"title":{},"body":{"injectables/ReStorageService.html":{}}}],["remove(key",{"_index":609,"title":{},"body":{"injectables/ReStorageService.html":{}}}],["render",{"_index":170,"title":{},"body":{"directives/CollapseDirective.html":{},"components/MenuBarComponent.html":{}}}],["renderer2",{"_index":179,"title":{},"body":{"directives/CollapseDirective.html":{},"components/MenuBarComponent.html":{}}}],["request",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/functions.html":{}}}],["request.clon",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["require('./message.json",{"_index":547,"title":{},"body":{"injectables/MessageResolver.html":{}}}],["res.statu",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["reset",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/LoginModule.html":{},"modules/ManageAppModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["resiz",{"_index":490,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["resolve(thi",{"_index":335,"title":{},"body":{"injectables/LoadingService.html":{}}}],["resolver.servic",{"_index":243,"title":{},"body":{"modules/CoreModule.html":{},"components/FieldErrorComponent.html":{},"pipes/MessagePipe.html":{}}}],["resolver.service.t",{"_index":534,"title":{},"body":{"injectables/MessageResolver.html":{},"coverage.html":{}}}],["resolver.service.ts:31",{"_index":543,"title":{},"body":{"injectables/MessageResolver.html":{}}}],["resolver.service.ts:36",{"_index":541,"title":{},"body":{"injectables/MessageResolver.html":{}}}],["resolver.service.ts:5",{"_index":548,"title":{},"body":{"injectables/MessageResolver.html":{}}}],["resolver.service.ts:6",{"_index":549,"title":{},"body":{"injectables/MessageResolver.html":{}}}],["resolver.service.ts:8",{"_index":546,"title":{},"body":{"injectables/MessageResolver.html":{}}}],["respons",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["restorageservic",{"_index":229,"title":{"injectables/ReStorageService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/ReStorageService.html":{},"coverage.html":{},"overview.html":{}}}],["restorageservice.storage_value_key",{"_index":616,"title":{},"body":{"injectables/ReStorageService.html":{}}}],["result",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/CollapseDirective.html":{},"modules/CoreModule.html":{},"interfaces/CurrentUser.html":{},"components/FieldErrorComponent.html":{},"injectables/GuidService.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"components/ManageAppComponent.html":{},"modules/ManageAppModule.html":{},"components/MenuBarComponent.html":{},"interfaces/MenuConfig.html":{},"interfaces/MenuItem.html":{},"injectables/MenuService.html":{},"pipes/MessagePipe.html":{},"injectables/MessageResolver.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"injectables/ReStorageService.html":{},"modules/SharedModule.html":{},"injectables/TitleService.html":{},"components/UserMockComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"directives/CollapseDirective.html":{},"components/FieldErrorComponent.html":{},"injectables/GuidService.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MenuService.html":{},"pipes/MessagePipe.html":{},"injectables/MessageResolver.html":{},"components/PageHeaderComponent.html":{},"injectables/ReStorageService.html":{},"injectables/TitleService.html":{}}}],["role",{"_index":258,"title":{},"body":{"interfaces/CurrentUser.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'nam",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{}}}],["rout",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["router",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/TitleService.html":{}}}],["router_config",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/ManageAppModule.html":{}}}],["routermodul",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/ManageAppModule.html":{},"modules/SharedModule.html":{}}}],["routermodule.forchild(router_config",{"_index":375,"title":{},"body":{"modules/LoginModule.html":{},"modules/ManageAppModule.html":{}}}],["routermodule.forroot(router_config",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["routesrecogn",{"_index":640,"title":{},"body":{"injectables/TitleService.html":{}}}],["rxj",{"_index":391,"title":{},"body":{"injectables/LoginService.html":{},"injectables/MenuService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":396,"title":{},"body":{"injectables/LoginService.html":{},"components/MenuBarComponent.html":{},"injectables/TitleService.html":{}}}],["saas的全局scss配置，目录结构组织；支持重新bootstrap",{"_index":726,"title":{},"body":{"index.html":{}}}],["saas的后端管理系统。目标在于方便基于angular",{"_index":717,"title":{},"body":{"index.html":{}}}],["sales.svg",{"_index":519,"title":{},"body":{"injectables/MenuService.html":{}}}],["sass",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["save",{"_index":601,"title":{},"body":{"injectables/ReStorageService.html":{}}}],["save(key",{"_index":611,"title":{},"body":{"injectables/ReStorageService.html":{}}}],["selector",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"directives/CollapseDirective.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{}}}],["server、electron",{"_index":742,"title":{},"body":{"index.html":{}}}],["servic",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["serviceworkermodul",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register('/ngsw",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["sethead",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["settimeout",{"_index":333,"title":{},"body":{"injectables/LoadingService.html":{}}}],["shared/menu",{"_index":413,"title":{},"body":{"components/ManageAppComponent.html":{}}}],["shared/model/curr",{"_index":393,"title":{},"body":{"injectables/LoginService.html":{}}}],["shared/shared.modul",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/ManageAppModule.html":{}}}],["sharedmodul",{"_index":139,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/ManageAppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["shouldshowuparrow",{"_index":447,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["shouldshowuparrow(path",{"_index":459,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["show",{"_index":173,"title":{},"body":{"directives/CollapseDirective.html":{},"components/FieldErrorComponent.html":{},"injectables/LoadingService.html":{}}}],["showerror",{"_index":341,"title":{},"body":{"components/LoginComponent.html":{}}}],["showtextmenubar",{"_index":448,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["showtextmenubar(ev",{"_index":462,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["simplechang",{"_index":187,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/CollapseDirective.html":{},"modules/CoreModule.html":{},"interfaces/CurrentUser.html":{},"components/FieldErrorComponent.html":{},"injectables/GuidService.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"components/ManageAppComponent.html":{},"modules/ManageAppModule.html":{},"components/MenuBarComponent.html":{},"interfaces/MenuConfig.html":{},"interfaces/MenuItem.html":{},"injectables/MenuService.html":{},"pipes/MessagePipe.html":{},"injectables/MessageResolver.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"injectables/ReStorageService.html":{},"modules/SharedModule.html":{},"injectables/TitleService.html":{},"components/UserMockComponent.html":{},"dependencies.html":{}}}],["src/.../loading.t",{"_index":707,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:17",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:36",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/core.module.t",{"_index":230,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/guid/guid.service.t",{"_index":309,"title":{},"body":{"injectables/GuidService.html":{},"coverage.html":{}}}],["src/app/core/guid/guid.service.ts:5",{"_index":315,"title":{},"body":{"injectables/GuidService.html":{}}}],["src/app/core/guid/guid.service.ts:7",{"_index":312,"title":{},"body":{"injectables/GuidService.html":{}}}],["src/app/core/loading/loading.service.t",{"_index":325,"title":{},"body":{"injectables/LoadingService.html":{},"coverage.html":{}}}],["src/app/core/loading/loading.service.ts:19",{"_index":329,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/core/loading/loading.service.ts:5",{"_index":328,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/core/loading/loading.service.ts:8",{"_index":330,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/core/loading/loading.t",{"_index":664,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/message/messag",{"_index":533,"title":{},"body":{"injectables/MessageResolver.html":{},"coverage.html":{}}}],["src/app/core/storage/storage.service.t",{"_index":597,"title":{},"body":{"injectables/ReStorageService.html":{},"coverage.html":{}}}],["src/app/core/storage/storage.service.ts:12",{"_index":612,"title":{},"body":{"injectables/ReStorageService.html":{}}}],["src/app/core/storage/storage.service.ts:19",{"_index":607,"title":{},"body":{"injectables/ReStorageService.html":{}}}],["src/app/core/storage/storage.service.ts:26",{"_index":610,"title":{},"body":{"injectables/ReStorageService.html":{}}}],["src/app/core/storage/storage.service.ts:30",{"_index":605,"title":{},"body":{"injectables/ReStorageService.html":{}}}],["src/app/core/storage/storage.service.ts:6",{"_index":604,"title":{},"body":{"injectables/ReStorageService.html":{}}}],["src/app/core/title/title.service.t",{"_index":634,"title":{},"body":{"injectables/TitleService.html":{},"coverage.html":{}}}],["src/app/core/title/title.service.ts:11",{"_index":642,"title":{},"body":{"injectables/TitleService.html":{}}}],["src/app/core/title/title.service.ts:20",{"_index":641,"title":{},"body":{"injectables/TitleService.html":{}}}],["src/app/core/title/title.service.ts:8",{"_index":638,"title":{},"body":{"injectables/TitleService.html":{}}}],["src/app/login/login.component.t",{"_index":337,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:13",{"_index":350,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:14",{"_index":348,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:15",{"_index":345,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:28",{"_index":347,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.module.t",{"_index":372,"title":{},"body":{"modules/LoginModule.html":{}}}],["src/app/login/login.service.t",{"_index":376,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/app/login/login.service.ts:10",{"_index":380,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login/login.service.ts:18",{"_index":389,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login/login.service.ts:33",{"_index":384,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/manage/manag",{"_index":406,"title":{},"body":{"components/ManageAppComponent.html":{},"modules/ManageAppModule.html":{},"coverage.html":{}}}],["src/app/manage/menu.service.t",{"_index":503,"title":{},"body":{"injectables/MenuService.html":{},"coverage.html":{}}}],["src/app/manage/menu.service.ts:14",{"_index":506,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/manage/menu.service.ts:6",{"_index":505,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/manage/menu.service.ts:9",{"_index":507,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/manage/ord",{"_index":564,"title":{},"body":{"components/OrderMockComponent.html":{},"coverage.html":{}}}],["src/app/manage/us",{"_index":656,"title":{},"body":{"components/UserMockComponent.html":{},"coverage.html":{}}}],["src/app/shared/collapse/collapse.directive.t",{"_index":163,"title":{},"body":{"directives/CollapseDirective.html":{},"coverage.html":{}}}],["src/app/shared/collapse/collapse.directive.ts:25",{"_index":184,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["src/app/shared/collapse/collapse.directive.ts:31",{"_index":182,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["src/app/shared/collapse/collapse.directive.ts:33",{"_index":192,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["src/app/shared/collapse/collapse.directive.ts:34",{"_index":180,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["src/app/shared/collapse/collapse.directive.ts:41",{"_index":188,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["src/app/shared/collapse/collapse.directive.ts:45",{"_index":191,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["src/app/shared/collapse/collapse.directive.ts:53",{"_index":185,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["src/app/shared/collapse/collapse.directive.ts:58",{"_index":190,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["src/app/shared/field",{"_index":260,"title":{},"body":{"components/FieldErrorComponent.html":{},"coverage.html":{}}}],["src/app/shared/menu",{"_index":432,"title":{},"body":{"components/MenuBarComponent.html":{},"interfaces/MenuConfig.html":{},"interfaces/MenuItem.html":{},"coverage.html":{}}}],["src/app/shared/message/message.pipe.t",{"_index":525,"title":{},"body":{"pipes/MessagePipe.html":{},"coverage.html":{}}}],["src/app/shared/message/message.pipe.ts:10",{"_index":529,"title":{},"body":{"pipes/MessagePipe.html":{}}}],["src/app/shared/model/curr",{"_index":255,"title":{},"body":{"interfaces/CurrentUser.html":{},"coverage.html":{}}}],["src/app/shared/pag",{"_index":568,"title":{},"body":{"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/shared.module.t",{"_index":623,"title":{},"body":{"modules/SharedModule.html":{}}}],["start",{"_index":712,"title":{"index.html":{}},"body":{}}],["statement",{"_index":661,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":441,"title":{},"body":{"components/MenuBarComponent.html":{},"injectables/ReStorageService.html":{}}}],["storag",{"_index":234,"title":{},"body":{"modules/CoreModule.html":{},"injectables/ReStorageService.html":{},"dependencies.html":{},"index.html":{}}}],["storage/storage.servic",{"_index":239,"title":{},"body":{"modules/CoreModule.html":{}}}],["storage_value_key",{"_index":598,"title":{},"body":{"injectables/ReStorageService.html":{}}}],["storageservic",{"_index":603,"title":{},"body":{"injectables/ReStorageService.html":{}}}],["storagetyp",{"_index":233,"title":{},"body":{"modules/CoreModule.html":{},"injectables/ReStorageService.html":{}}}],["storage、@rebirth/ng",{"_index":735,"title":{},"body":{"index.html":{}}}],["string",{"_index":183,"title":{},"body":{"directives/CollapseDirective.html":{},"interfaces/CurrentUser.html":{},"components/FieldErrorComponent.html":{},"injectables/LoginService.html":{},"components/MenuBarComponent.html":{},"interfaces/MenuConfig.html":{},"interfaces/MenuItem.html":{},"injectables/MessageResolver.html":{},"components/PageHeaderComponent.html":{},"injectables/ReStorageService.html":{}}}],["style.display",{"_index":177,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["styleurl",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{}}}],["subscrib",{"_index":361,"title":{},"body":{"components/LoginComponent.html":{},"components/MenuBarComponent.html":{}}}],["subscribe(menuconfig",{"_index":419,"title":{},"body":{"components/ManageAppComponent.html":{}}}],["subscribe(pagetitl",{"_index":649,"title":{},"body":{"injectables/TitleService.html":{}}}],["super(http",{"_index":398,"title":{},"body":{"injectables/LoginService.html":{}}}],["support",{"_index":747,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":748,"title":{},"body":{"modules.html":{}}}],["svgclass",{"_index":500,"title":{},"body":{"interfaces/MenuConfig.html":{},"interfaces/MenuItem.html":{},"injectables/MenuService.html":{}}}],["svgpath",{"_index":501,"title":{},"body":{"interfaces/MenuConfig.html":{},"interfaces/MenuItem.html":{},"injectables/MenuService.html":{}}}],["swprecache内置pwa",{"_index":740,"title":{},"body":{"index.html":{}}}],["t",{"_index":608,"title":{},"body":{"injectables/ReStorageService.html":{}}}],["tabl",{"_index":676,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":675,"title":{},"body":{"coverage.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{}}}],["templateurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{}}}],["text",{"_index":478,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["textmenuclass",{"_index":475,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["this.apisetup",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["this.applicationsetup",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authorizationservic",{"_index":399,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.authorizationservice.getcurrentus",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authorizationservice.getcurrentuser().roles.indexof('admin",{"_index":508,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.collaps",{"_index":211,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["this.display",{"_index":215,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["this.dummymenu",{"_index":510,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.elementref",{"_index":208,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["this.elementref.nativeel",{"_index":219,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["this.field",{"_index":306,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["this.formatmessage(messag",{"_index":555,"title":{},"body":{"injectables/MessageResolver.html":{}}}],["this.formgroupdirective.form",{"_index":295,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["this.fromgroup",{"_index":292,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["this.fromgroup.controls[this.field",{"_index":297,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["this.getmessag",{"_index":551,"title":{},"body":{"injectables/MessageResolver.html":{}}}],["this.getmessage(`${this.validationprefix}.${key",{"_index":553,"title":{},"body":{"injectables/MessageResolver.html":{}}}],["this.getroutetitle(ev",{"_index":648,"title":{},"body":{"injectables/TitleService.html":{}}}],["this.hid",{"_index":212,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["this.innerlogin(logininfo).pip",{"_index":400,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.isiconmenubaropen",{"_index":480,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["this.istextmenubaropen",{"_index":476,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["this.label",{"_index":305,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["this.listens.foreach(listen",{"_index":494,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["this.listens.push",{"_index":488,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["this.loadingservice.hid",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadingservice.show",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loginform",{"_index":353,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.invalid",{"_index":358,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginservic",{"_index":359,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.menuconfig",{"_index":420,"title":{},"body":{"components/ManageAppComponent.html":{}}}],["this.menuservic",{"_index":417,"title":{},"body":{"components/ManageAppComponent.html":{}}}],["this.messageresolver.getmessage(valu",{"_index":532,"title":{},"body":{"pipes/MessagePipe.html":{}}}],["this.messageresolver.getvalidationmessage(this.field",{"_index":304,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["this.messages[msgkey",{"_index":554,"title":{},"body":{"injectables/MessageResolver.html":{}}}],["this.ngform",{"_index":293,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["this.ngform.form",{"_index":294,"title":{},"body":{"components/FieldErrorComponent.html":{}}}],["this.onexpand.emit",{"_index":595,"title":{},"body":{"components/PageHeaderComponent.html":{}}}],["this.overlayservice.clos",{"_index":336,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.overlayservice.open",{"_index":334,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.rebirthhttpprovid",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["this.rebirthngconfig.extend(rebirth_ui_i18n_zhcn",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["this.rebirthngconfig.rootcontain",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["this.render",{"_index":209,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["this.renderer.listen('window",{"_index":489,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["this.renderer.setstyl",{"_index":218,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["this.renderer.setstyle(this.elementref.nativeel",{"_index":222,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["this.router.ev",{"_index":644,"title":{},"body":{"injectables/TitleService.html":{}}}],["this.router.navigatebyurl('/login",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigatebyurl('/manage/hom",{"_index":362,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.url.indexof(path",{"_index":492,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["this.show",{"_index":213,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["this.showerror",{"_index":363,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.storageservice.get",{"_index":617,"title":{},"body":{"injectables/ReStorageService.html":{}}}],["this.storageservice.put",{"_index":614,"title":{},"body":{"injectables/ReStorageService.html":{}}}],["this.storageservice.remov",{"_index":618,"title":{},"body":{"injectables/ReStorageService.html":{}}}],["this.storageservice.removeal",{"_index":619,"title":{},"body":{"injectables/ReStorageService.html":{}}}],["this.storageservice.setdefaultstoragetype(storagetype.sessionstorag",{"_index":613,"title":{},"body":{"injectables/ReStorageService.html":{}}}],["this.title.settitle(pagetitl",{"_index":650,"title":{},"body":{"injectables/TitleService.html":{}}}],["this.titleservice.regist",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["this.toggl",{"_index":210,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["this.uid",{"_index":324,"title":{},"body":{"injectables/GuidService.html":{}}}],["this.updatemenubarstatu",{"_index":485,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["this.validationprefix}.${field}.${key",{"_index":552,"title":{},"body":{"injectables/MessageResolver.html":{}}}],["this.viewcontainerref",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["this.windowref.innerwidth",{"_index":482,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["this.windowres",{"_index":486,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["this.windowresize.emit($ev",{"_index":491,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["titl",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"injectables/TitleService.html":{}}}],["title/title.servic",{"_index":244,"title":{},"body":{"modules/CoreModule.html":{}}}],["titleservic",{"_index":30,"title":{"injectables/TitleService.html":{}},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"injectables/TitleService.html":{},"coverage.html":{},"overview.html":{}}}],["toggl",{"_index":174,"title":{},"body":{"directives/CollapseDirective.html":{},"components/MenuBarComponent.html":{}}}],["token",{"_index":259,"title":{},"body":{"interfaces/CurrentUser.html":{},"index.html":{}}}],["transform",{"_index":526,"title":{},"body":{"pipes/MessagePipe.html":{}}}],["transform(valu",{"_index":527,"title":{},"body":{"pipes/MessagePipe.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{}}}],["true",{"_index":166,"title":{},"body":{"directives/CollapseDirective.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{}}}],["tslint",{"_index":746,"title":{},"body":{"index.html":{}}}],["type",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"directives/CollapseDirective.html":{},"interfaces/CurrentUser.html":{},"components/FieldErrorComponent.html":{},"injectables/GuidService.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"interfaces/MenuConfig.html":{},"interfaces/MenuItem.html":{},"injectables/MenuService.html":{},"pipes/MessagePipe.html":{},"injectables/MessageResolver.html":{},"components/PageHeaderComponent.html":{},"injectables/ReStorageService.html":{},"injectables/TitleService.html":{},"coverage.html":{}}}],["typescript",{"_index":745,"title":{},"body":{"index.html":{}}}],["uid",{"_index":310,"title":{},"body":{"injectables/GuidService.html":{}}}],["undefin",{"_index":708,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updatemenubarstatu",{"_index":449,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["url）；基于rebirth",{"_index":723,"title":{},"body":{"index.html":{}}}],["useexist",{"_index":196,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["user",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ManageAppComponent.html":{},"modules/ManageAppModule.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{}}}],["user.model",{"_index":394,"title":{},"body":{"injectables/LoginService.html":{}}}],["user.model.t",{"_index":256,"title":{},"body":{"interfaces/CurrentUser.html":{},"coverage.html":{}}}],["usermockcompon",{"_index":120,"title":{"components/UserMockComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"modules/ManageAppModule.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usernam",{"_index":355,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["utc",{"_index":319,"title":{},"body":{"injectables/GuidService.html":{}}}],["utc.gettime().tostr",{"_index":323,"title":{},"body":{"injectables/GuidService.html":{}}}],["valid",{"_index":351,"title":{},"body":{"components/LoginComponent.html":{},"injectables/MessageResolver.html":{}}}],["validation.login",{"_index":365,"title":{},"body":{"components/LoginComponent.html":{}}}],["validationprefix",{"_index":535,"title":{},"body":{"injectables/MessageResolver.html":{}}}],["validators.requir",{"_index":356,"title":{},"body":{"components/LoginComponent.html":{}}}],["valu",{"_index":279,"title":{},"body":{"components/FieldErrorComponent.html":{},"injectables/GuidService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"pipes/MessagePipe.html":{},"injectables/MessageResolver.html":{},"components/PageHeaderComponent.html":{},"injectables/ReStorageService.html":{},"miscellaneous/functions.html":{}}}],["var",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/OrderMockComponent.html":{},"components/PageFooterComponent.html":{},"components/PageHeaderComponent.html":{},"components/UserMockComponent.html":{}}}],["viewchild",{"_index":592,"title":{},"body":{"components/PageHeaderComponent.html":{}}}],["viewchild('volumetempl",{"_index":594,"title":{},"body":{"components/PageHeaderComponent.html":{}}}],["viewcontainerref",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["visibl",{"_index":221,"title":{},"body":{"directives/CollapseDirective.html":{}}}],["void",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"directives/CollapseDirective.html":{},"components/FieldErrorComponent.html":{},"components/LoginComponent.html":{},"components/ManageAppComponent.html":{},"components/MenuBarComponent.html":{},"components/PageHeaderComponent.html":{},"injectables/TitleService.html":{}}}],["volumetempl",{"_index":585,"title":{},"body":{"components/PageHeaderComponent.html":{}}}],["way(sessionstorag",{"_index":250,"title":{},"body":{"modules/CoreModule.html":{}}}],["web",{"_index":703,"title":{},"body":{"dependencies.html":{}}}],["windowref",{"_index":452,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["windowres",{"_index":444,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["work",{"_index":657,"title":{},"body":{"components/UserMockComponent.html":{}}}],["worker",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["worker.j",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["ye",{"_index":530,"title":{},"body":{"pipes/MessagePipe.html":{}}}],["zone.j",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/LoginModule.html":{},"modules/ManageAppModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiSetup\n                            \n                            \n                                    Private\n                                applicationSetup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rebirthNGConfig: RebirthNGConfig, authorizationService: AuthorizationService, viewContainerRef: ViewContainerRef, loadingService: LoadingService, router: Router, rebirthHttpProvider: RebirthHttpProvider, titleService: TitleService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rebirthNGConfig\n                                                  \n                                                        \n                                                                    RebirthNGConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                    AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                    LoadingService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        rebirthHttpProvider\n                                                  \n                                                        \n                                                                    RebirthHttpProvider\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                    TitleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiSetup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        apiSetup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            applicationSetup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        applicationSetup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, ViewContainerRef } from '@angular/core';\nimport { environment } from '../environments/environment';\nimport { RebirthHttpProvider } from 'rebirth-http';\nimport { RebirthNGConfig } from 'rebirth-ng';\nimport { AuthorizationService } from 'rebirth-permission';\nimport { LoadingService } from './core/loading/loading.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { ignoreLoading } from './core/loading/loading';\nimport { TitleService } from './core/title/title.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  constructor(\n    private rebirthNGConfig: RebirthNGConfig,\n    private authorizationService: AuthorizationService,\n    private viewContainerRef: ViewContainerRef,\n    private loadingService: LoadingService,\n    private router: Router,\n    private rebirthHttpProvider: RebirthHttpProvider,\n    private titleService: TitleService,\n  ) {\n    this.applicationSetup();\n  }\n\n  private applicationSetup() {\n    this.rebirthNGConfig.rootContainer = this.viewContainerRef; // this.rebirthNGConfig.extend(REBIRTH_UI_I18N_ZHCN); i18n\n    this.titleService.register(); // enable config different title for each route\n    this.apiSetup();\n  }\n\n  private apiSetup() {\n    this.rebirthHttpProvider\n      .baseUrl(environment.api.host)\n      .addInterceptor({\n        request: request => {\n          if (ignoreLoading(request)) {\n            return;\n          }\n          this.loadingService.show();\n        },\n        response: () => {\n          this.loadingService.hide();\n        },\n      })\n      .addInterceptor({\n        request: request => {\n          const currentUser = this.authorizationService.getCurrentUser();\n          if (currentUser) {\n            return request.clone({\n              setHeaders: { Authorization: `Bearer ${currentUser.token}` },\n            });\n          }\n        },\n      })\n      .addResponseErrorInterceptor((res: HttpErrorResponse) => {\n        if (res.status && [401, 403].indexOf(res.status) !== -1) {\n          this.router.navigateByUrl('/login');\n        }\n      });\n  }\n}\n\n    \n\n    \n        \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FieldErrorComponent', 'selector': 'app-field-error'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageAppComponent', 'selector': 'app-manage-app'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'OrderMockComponent', 'selector': 'app-order-mock'},{'name': 'PageFooterComponent', 'selector': 'app-page-footer'},{'name': 'PageHeaderComponent', 'selector': 'app-page-header'},{'name': 'UserMockComponent', 'selector': 'app-user-mock'}];\n    var DIRECTIVES = [{'name': 'CollapseDirective', 'selector': '[appCollapse]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CoreModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { ROUTER_CONFIG } from './app.routes';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\nimport { environment } from '../environments/environment';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    ServiceWorkerModule.register('/ngsw-worker.js', {\n      enabled: environment.production,\n    }),\n    CoreModule,\n    SharedModule,\n    RouterModule.forRoot(ROUTER_CONFIG),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/CollapseDirective.html":{"url":"directives/CollapseDirective.html","title":"directive - CollapseDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  CollapseDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/collapse/collapse.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        providers\n                        \n                            \n                                {\n    : , : (() => ), : true,\n}\n                            \n                        \n                    \n\n                    \n                        selector\n                        [appCollapse]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                elementRef\n                            \n                            \n                                    Protected\n                                renderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                show\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appCollapse\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                style.display\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, renderer2: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/collapse/collapse.directive.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer2\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        appCollapse\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/collapse/collapse.directive.ts:31\n                            \n                        \n            \n        \n\n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            style.display\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        style.display:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/collapse/collapse.directive.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \nhide()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/collapse/collapse.directive.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/collapse/collapse.directive.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \nshow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/collapse/collapse.directive.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/collapse/collapse.directive.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            elementRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        elementRef:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/collapse/collapse.directive.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            renderer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        renderer:     Renderer2\n\n                    \n                \n                    \n                        \n                            Type :     Renderer2\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/collapse/collapse.directive.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  forwardRef,\n  HostBinding,\n  Input,\n  OnChanges,\n  Renderer2,\n  SimpleChanges,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Directive({\n  selector: '[appCollapse]',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CollapseDirective),\n      multi: true,\n    },\n  ],\n  host: { '[class.collapse]': 'true' },\n})\nexport class CollapseDirective implements OnChanges {\n  @HostBinding('style.display') display: string;\n\n  @HostBinding('class.in')\n  @HostBinding('class.show')\n  @HostBinding('attr.aria-expanded')\n  @Input('appCollapse')\n  collapse: boolean;\n\n  protected elementRef: ElementRef;\n  protected renderer: Renderer2;\n\n  constructor(elementRef: ElementRef, renderer2: Renderer2) {\n    this.elementRef = elementRef;\n    this.renderer = renderer2;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.toggle();\n  }\n\n  toggle(): void {\n    if (this.collapse) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  hide(): void {\n    this.collapse = false;\n    this.display = 'none';\n  }\n\n  show(): void {\n    this.collapse = true;\n    this.display = 'block';\n    this.renderer.setStyle(\n      this.elementRef.nativeElement,\n      'overflow',\n      'visible',\n    );\n    this.renderer.setStyle(this.elementRef.nativeElement, 'height', 'auto');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n  Modules\n  CoreModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nGuidService\n\nGuidService\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nGuidService->CoreModule\n\n\n\n\n\nLoadingService\n\nLoadingService\n\nCoreModule -->\n\nLoadingService->CoreModule\n\n\n\n\n\nMessageResolver\n\nMessageResolver\n\nCoreModule -->\n\nMessageResolver->CoreModule\n\n\n\n\n\nReStorageService\n\nReStorageService\n\nCoreModule -->\n\nReStorageService->CoreModule\n\n\n\n\n\nTitleService\n\nTitleService\n\nCoreModule -->\n\nTitleService->CoreModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     GuidService\n                            \n                            \n                                     LoadingService\n                            \n                            \n                                     MessageResolver\n                            \n                            \n                                     ReStorageService\n                            \n                            \n                                     TitleService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RebirthHttpModule } from 'rebirth-http';\nimport { RebirthStorageModule, StorageType } from 'rebirth-storage';\nimport { RebirthEventSourceModule } from 'rebirth-event-source';\nimport { RebirthNGModule } from 'rebirth-ng';\nimport {\n  AuthorizationService,\n  RebirthPermissionModule,\n} from 'rebirth-permission';\nimport { ReStorageService } from './storage/storage.service';\nimport { GuidService } from './guid/guid.service';\nimport { LoadingService } from './loading/loading.service';\nimport { MessageResolver } from './message/message-resolver.service';\nimport { TitleService } from './title/title.service';\n\n@NgModule({\n  imports: [\n    RebirthHttpModule,\n    RebirthStorageModule,\n    RebirthEventSourceModule,\n    RebirthNGModule.forRoot(),\n    RebirthPermissionModule.forRoot({ loginPage: '/login' }),\n  ],\n  providers: [\n    LoadingService,\n    GuidService,\n    ReStorageService,\n    MessageResolver,\n    TitleService,\n  ],\n  exports: [],\n})\nexport class CoreModule {\n  constructor(authorizationService: AuthorizationService) {\n    // authorization storage way(sessionStorage, localStorage, memory)\n    authorizationService.setStorageType(StorageType.sessionStorage);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CurrentUser.html":{"url":"interfaces/CurrentUser.html","title":"interface - CurrentUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CurrentUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model/current-user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        roles\n                                \n                                \n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CurrentUser {\n  id: string;\n  name: string;\n  token: string;\n  roles: string[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FieldErrorComponent.html":{"url":"components/FieldErrorComponent.html","title":"component - FieldErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FieldErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/field-error/field-error.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n            \n                exportAs\n                fieldError\n            \n\n\n\n\n\n\n\n            \n                selector\n                app-field-error\n            \n\n            \n                styleUrls\n                field-error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./field-error.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fromGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getErrorMessage\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngForm: NgForm, formGroupDirective: FormGroupDirective, messageResolver: MessageResolver)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/field-error/field-error.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngForm\n                                                  \n                                                        \n                                                                    NgForm\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        formGroupDirective\n                                                  \n                                                        \n                                                                    FormGroupDirective\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageResolver\n                                                  \n                                                        \n                                                                    MessageResolver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/field-error/field-error.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/field-error/field-error.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getErrorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetErrorMessage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/field-error/field-error.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/field-error/field-error.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fromGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fromGroup:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/field-error/field-error.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        invalid\n                    \n                \n\n                \n                    \n                        getinvalid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/field-error/field-error.component.ts:39\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit,\n  Component,\n  Input,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  FormGroup,\n  FormGroupDirective,\n  NgForm,\n} from '@angular/forms';\nimport { MessageResolver } from '../../core/message/message-resolver.service';\n\n@Component({\n  selector: 'app-field-error',\n  templateUrl: './field-error.component.html',\n  styleUrls: ['./field-error.component.scss'],\n  exportAs: 'fieldError',\n})\nexport class FieldErrorComponent implements OnInit {\n  @Input() field: string;\n  @Input() label: string = null;\n  fromGroup: FormGroup;\n\n  constructor(\n    @Optional() private ngForm: NgForm,\n    @Optional() private formGroupDirective: FormGroupDirective,\n    private messageResolver: MessageResolver,\n  ) {}\n\n  ngOnInit(): void {\n    this.fromGroup = this.ngForm\n      ? this.ngForm.form\n      : this.formGroupDirective.form;\n  }\n\n  get invalid(): boolean {\n    if (this.fromGroup) {\n      const control = this.fromGroup.controls[this.field];\n      return control ? control.touched && control.invalid : false;\n    }\n    return false;\n  }\n\n  getErrorMessage() {\n    const control = this.fromGroup.controls[this.field];\n    if (control && control.errors) {\n      const key = Object.keys(control.errors)[0]; // only show first error.\n      return this.messageResolver.getValidationMessage(this.field, key, {\n        label: this.label || this.field,\n        ...control.getError(key),\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  {{getErrorMessage()}}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{getErrorMessage()}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FieldErrorComponent', 'selector': 'app-field-error'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageAppComponent', 'selector': 'app-manage-app'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'OrderMockComponent', 'selector': 'app-order-mock'},{'name': 'PageFooterComponent', 'selector': 'app-page-footer'},{'name': 'PageHeaderComponent', 'selector': 'app-page-header'},{'name': 'UserMockComponent', 'selector': 'app-user-mock'}];\n    var DIRECTIVES = [{'name': 'CollapseDirective', 'selector': '[appCollapse]'}];\n    var ACTUAL_COMPONENT = {'name': 'FieldErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GuidService.html":{"url":"injectables/GuidService.html","title":"injectable - GuidService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GuidService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/guid/guid.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                uid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                newId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newId\n                            \n                            \n                        \n                    \n                \n                \n                    \nnewId()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/guid/guid.service.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uid:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/guid/guid.service.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GuidService {\n  uid = 0;\n\n  newId() {\n    const now = new Date();\n    const utc = new Date(now.getTime() + now.getTimezoneOffset() * 60000);\n    return utc.getTime().toString() + this.uid++;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoadingService.html":{"url":"injectables/LoadingService.html","title":"injectable - LoadingService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LoadingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/loading/loading.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(overlayService: OverlayService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/loading/loading.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        overlayService\n                                                  \n                                                        \n                                                                    OverlayService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \nhide()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/loading/loading.service.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \nshow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/loading/loading.service.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { OverlayService } from 'rebirth-ng';\n\n@Injectable()\nexport class LoadingService {\n  constructor(private overlayService: OverlayService) {}\n\n  show() {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        this.overlayService.open({\n          html: ``,\n        });\n        resolve(this);\n      });\n    });\n  }\n\n  hide() {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        this.overlayService.close();\n        resolve(this);\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                            \n                                showError\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, loginService: LoginService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                    LoginService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showError:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     \n\n                    \n                \n                    \n                        \n                            Default value : environment.title\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { environment } from '../../environments/environment';\nimport { LoginService } from './login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent {\n  title = environment.title;\n  loginForm: FormGroup;\n  showError: boolean;\n\n  constructor(\n    private fb: FormBuilder,\n    private loginService: LoginService,\n    private router: Router,\n  ) {\n    this.loginForm = fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  login() {\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.loginService\n      .login(this.loginForm.value)\n      .subscribe(\n        user => this.router.navigateByUrl('/manage/home'),\n        () => (this.showError = true),\n      );\n  }\n}\n\n    \n\n    \n        \n  Rebirth Admin\n  \n    \n      \n        \n        {{'validation.login' | message}}\n      \n      \n        用户名\n        \n        \n      \n      \n        密码\n        \n        \n      \n      登 录\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Rebirth Admin                            {{\\'validation.login\\' | message}}                    用户名                                    密码                            登 录      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FieldErrorComponent', 'selector': 'app-field-error'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageAppComponent', 'selector': 'app-manage-app'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'OrderMockComponent', 'selector': 'app-order-mock'},{'name': 'PageFooterComponent', 'selector': 'app-page-footer'},{'name': 'PageHeaderComponent', 'selector': 'app-page-header'},{'name': 'UserMockComponent', 'selector': 'app-user-mock'}];\n    var DIRECTIVES = [{'name': 'CollapseDirective', 'selector': '[appCollapse]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginModule.html":{"url":"modules/LoginModule.html","title":"module - LoginModule","body":"\n                   \n\n\n\n\n  Modules\n  LoginModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoginModule\n\n\n\ncluster_LoginModule_declarations\n\n\n\ncluster_LoginModule_imports\n\n\n\ncluster_LoginModule_providers\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nLoginModule\n\nLoginModule\n\nLoginModule -->\n\nLoginComponent->LoginModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nLoginModule -->\n\nSharedModule->LoginModule\n\n\n\n\n\nLoginService\n\nLoginService\n\nLoginModule -->\n\nLoginService->LoginModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/login/login.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoginComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     LoginService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { LoginComponent } from './login.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { RouterModule } from '@angular/router';\nimport { ROUTER_CONFIG } from './login.routes';\nimport { LoginService } from './login.service';\n\n@NgModule({\n  imports: [SharedModule, RouterModule.forChild(ROUTER_CONFIG)],\n  exports: [],\n  declarations: [LoginComponent],\n  providers: [LoginService],\n})\nexport class LoginModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login/login.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                innerLogin\n                            \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authorizationService: AuthorizationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                    AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            innerLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        innerLogin(body: )\n                    \n                \n\n                    \n                        \n                            Decorators : POST\n                        \n                    \n\n                        \n                            \n                                    Defined in src/app/login/login.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        body\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(loginInfo: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.service.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loginInfo\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { AuthorizationService } from 'rebirth-permission';\nimport { Body, POST, RebirthHttp } from 'rebirth-http';\nimport { HttpClient } from '@angular/common/http';\nimport { CurrentUser } from '../shared/model/current-user.model';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class LoginService extends RebirthHttp {\n  constructor(\n    http: HttpClient,\n    private authorizationService: AuthorizationService,\n  ) {\n    super(http);\n  }\n\n  login(loginInfo: {\n    username: string;\n    password: string;\n  }): Observable {\n    const authorizationService = this.authorizationService;\n    return this.innerLogin(loginInfo).pipe(\n      map(user => {\n        authorizationService.setCurrentUser(user);\n        return user;\n      }),\n    );\n  }\n\n  @POST('login')\n  // @loading(true)\n  private innerLogin(@Body body): Observable {\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManageAppComponent.html":{"url":"components/ManageAppComponent.html","title":"component - ManageAppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManageAppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/manage/manage-app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manage-app\n            \n\n            \n                styleUrls\n                manage-app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./manage-app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                menuConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(menuService: MenuService)\n                    \n                \n                        \n                            \n                                Defined in src/app/manage/manage-app.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                    MenuService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/manage/manage-app.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menuConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        menuConfig:     MenuConfig\n\n                    \n                \n                    \n                        \n                            Type :     MenuConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/manage/manage-app.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MenuConfig } from '../shared/menu-bar/menu-config.model';\nimport { MenuService } from './menu.service';\n\n@Component({\n  selector: 'app-manage-app',\n  templateUrl: './manage-app.component.html',\n  styleUrls: ['./manage-app.component.scss'],\n})\nexport class ManageAppComponent implements OnInit {\n  menuConfig: MenuConfig;\n\n  constructor(private menuService: MenuService) {}\n\n  ngOnInit(): void {\n    this.menuService\n      .getMenuConfig()\n      .subscribe(menuConfig => (this.menuConfig = menuConfig));\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n  Main content\n\n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Main content  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FieldErrorComponent', 'selector': 'app-field-error'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageAppComponent', 'selector': 'app-manage-app'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'OrderMockComponent', 'selector': 'app-order-mock'},{'name': 'PageFooterComponent', 'selector': 'app-page-footer'},{'name': 'PageHeaderComponent', 'selector': 'app-page-header'},{'name': 'UserMockComponent', 'selector': 'app-user-mock'}];\n    var DIRECTIVES = [{'name': 'CollapseDirective', 'selector': '[appCollapse]'}];\n    var ACTUAL_COMPONENT = {'name': 'ManageAppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ManageAppModule.html":{"url":"modules/ManageAppModule.html","title":"module - ManageAppModule","body":"\n                   \n\n\n\n\n  Modules\n  ManageAppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ManageAppModule\n\n\n\ncluster_ManageAppModule_declarations\n\n\n\ncluster_ManageAppModule_imports\n\n\n\ncluster_ManageAppModule_providers\n\n\n\n\nManageAppComponent\n\nManageAppComponent\n\n\n\nManageAppModule\n\nManageAppModule\n\nManageAppModule -->\n\nManageAppComponent->ManageAppModule\n\n\n\n\n\nOrderMockComponent\n\nOrderMockComponent\n\nManageAppModule -->\n\nOrderMockComponent->ManageAppModule\n\n\n\n\n\nUserMockComponent\n\nUserMockComponent\n\nManageAppModule -->\n\nUserMockComponent->ManageAppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nManageAppModule -->\n\nSharedModule->ManageAppModule\n\n\n\n\n\nMenuService\n\nMenuService\n\nManageAppModule -->\n\nMenuService->ManageAppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/manage/manage-app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ManageAppComponent\n                            \n                            \n                                OrderMockComponent\n                            \n                            \n                                UserMockComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     MenuService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { ManageAppComponent } from './manage-app.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { ROUTER_CONFIG } from './manage-app.routes';\nimport { OrderMockComponent } from './order-mock/order-mock.component';\nimport { UserMockComponent } from './user-mock/user-mock.component';\nimport { MenuService } from './menu.service';\n\n@NgModule({\n  imports: [SharedModule, RouterModule.forChild(ROUTER_CONFIG)],\n  exports: [],\n  declarations: [ManageAppComponent, OrderMockComponent, UserMockComponent],\n  providers: [MenuService],\n})\nexport class ManageAppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuBarComponent.html":{"url":"components/MenuBarComponent.html","title":"component - MenuBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/menu-bar/menu-bar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n            \n                exportAs\n                menuBar\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                app-menu-bar\n            \n\n            \n                styleUrls\n                menu-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu-bar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isIconMenuBarOpen\n                            \n                            \n                                listens\n                            \n                            \n                                    Static\n                                MAX_MIDDLE_SCREEN\n                            \n                            \n                                    Static\n                                MIN_MIDDLE_SCREEN\n                            \n                            \n                                windowResize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClassNames\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                shouldShowUpArrow\n                            \n                            \n                                showTextMenuBar\n                            \n                            \n                                toggle\n                            \n                            \n                                updateMenuBarStatus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isTextMenuBarOpen\n                            \n                            \n                                menuConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, renderer: Renderer2, windowRef: WindowRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/menu-bar/menu-bar.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        windowRef\n                                                  \n                                                        \n                                                                    WindowRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isTextMenuBarOpen\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/menu-bar/menu-bar.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuConfig\n                    \n                    \n                            \n                            Type:    MenuConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/menu-bar/menu-bar.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClassNames\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClassNames()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/menu-bar/menu-bar.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/menu-bar/menu-bar.component.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/menu-bar/menu-bar.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shouldShowUpArrow\n                            \n                            \n                        \n                    \n                \n                \n                    \nshouldShowUpArrow(path: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/menu-bar/menu-bar.component.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showTextMenuBar\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowTextMenuBar(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/menu-bar/menu-bar.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/menu-bar/menu-bar.component.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateMenuBarStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateMenuBarStatus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/menu-bar/menu-bar.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isIconMenuBarOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isIconMenuBarOpen:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/menu-bar/menu-bar.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listens\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        listens:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/menu-bar/menu-bar.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MAX_MIDDLE_SCREEN\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MAX_MIDDLE_SCREEN:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 768\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/menu-bar/menu-bar.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MIN_MIDDLE_SCREEN\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MIN_MIDDLE_SCREEN:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 576\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/menu-bar/menu-bar.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            windowResize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        windowResize:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/menu-bar/menu-bar.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n} from '@angular/core';\nimport { WindowRef } from 'rebirth-ng';\nimport { MenuConfig } from './menu-config.model';\nimport { Router } from '@angular/router';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-menu-bar',\n  templateUrl: './menu-bar.component.html',\n  styleUrls: ['./menu-bar.component.scss'],\n  host: {\n    '[class]': `getClassNames()`,\n  },\n  exportAs: 'menuBar',\n})\nexport class MenuBarComponent implements OnInit, OnDestroy {\n  static MAX_MIDDLE_SCREEN = 768;\n  static MIN_MIDDLE_SCREEN = 576;\n  @Input() menuConfig: MenuConfig;\n  @Input() isTextMenuBarOpen: boolean;\n  isIconMenuBarOpen = false;\n  windowResize = new EventEmitter();\n  listens: any[] = [];\n\n  constructor(\n    private router: Router,\n    private renderer: Renderer2,\n    private windowRef: WindowRef,\n  ) {}\n\n  getClassNames() {\n    const textMenuClass = this.isTextMenuBarOpen\n      ? 'open-text-menu'\n      : 'hide-text-menu';\n    const iconMenuClass = this.isIconMenuBarOpen\n      ? 'open-icon-menu'\n      : 'hide-icon-menu';\n    return `${textMenuClass} ${iconMenuClass}`;\n  }\n\n  updateMenuBarStatus() {\n    this.isTextMenuBarOpen =\n      this.windowRef.innerWidth >= MenuBarComponent.MAX_MIDDLE_SCREEN;\n    this.isIconMenuBarOpen =\n      this.windowRef.innerWidth >= MenuBarComponent.MIN_MIDDLE_SCREEN;\n  }\n\n  ngOnInit(): void {\n    this.updateMenuBarStatus();\n    this.windowResize\n      .pipe(debounceTime(200), distinctUntilChanged())\n      .subscribe(() => this.updateMenuBarStatus());\n\n    this.listens.push(\n      this.renderer.listen('window', 'resize', $event =>\n        this.windowResize.emit($event),\n      ),\n    );\n  }\n\n  shouldShowUpArrow(path): boolean {\n    return this.router.url.indexOf(path) !== -1;\n  }\n\n  toggle() {\n    this.isTextMenuBarOpen = !this.isTextMenuBarOpen;\n    if (this.windowRef.innerWidth >= MenuBarComponent.MIN_MIDDLE_SCREEN) {\n      this.isIconMenuBarOpen = true;\n    } else {\n      this.isIconMenuBarOpen = this.isTextMenuBarOpen;\n    }\n  }\n\n  showTextMenuBar(event) {\n    event.preventDefault();\n    this.isTextMenuBarOpen = true;\n  }\n\n  ngOnDestroy(): void {\n    this.listens.forEach(listen => listen());\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          \n        \n      \n      \n        \n          \n            {{data.name}}\n\n            \n              {{data.name}}\n              \n              \n            \n          \n          \n            {{children.name}}\n          \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                          {{data.name}}                          {{data.name}}                                                                        {{children.name}}                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FieldErrorComponent', 'selector': 'app-field-error'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageAppComponent', 'selector': 'app-manage-app'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'OrderMockComponent', 'selector': 'app-order-mock'},{'name': 'PageFooterComponent', 'selector': 'app-page-footer'},{'name': 'PageHeaderComponent', 'selector': 'app-page-header'},{'name': 'UserMockComponent', 'selector': 'app-user-mock'}];\n    var DIRECTIVES = [{'name': 'CollapseDirective', 'selector': '[appCollapse]'}];\n    var ACTUAL_COMPONENT = {'name': 'MenuBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuConfig.html":{"url":"interfaces/MenuConfig.html","title":"interface - MenuConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/menu-bar/menu-config.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        menus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        menus\n                                    \n                                \n                                \n                                    \n                                        menus:     MenuItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MenuItem {\n  link: string;\n  name: string;\n  svgClass?: string;\n  svgPath?: string;\n  children?: MenuItem[];\n}\n\nexport interface MenuConfig {\n  menus: MenuItem[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem.html":{"url":"interfaces/MenuItem.html","title":"interface - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/menu-bar/menu-config.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        children\n                                \n                                \n                                        link\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        svgClass\n                                \n                                \n                                            Optional\n                                        svgPath\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:     MenuItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItem[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        svgClass\n                                    \n                                \n                                \n                                    \n                                        svgClass:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        svgPath\n                                    \n                                \n                                \n                                    \n                                        svgPath:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MenuItem {\n  link: string;\n  name: string;\n  svgClass?: string;\n  svgPath?: string;\n  children?: MenuItem[];\n}\n\nexport interface MenuConfig {\n  menus: MenuItem[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MenuService.html":{"url":"injectables/MenuService.html","title":"injectable - MenuService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  MenuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/manage/menu.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dummyMenus\n                            \n                            \n                                getMenuConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authorizationService: AuthorizationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/manage/menu.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                    AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dummyMenus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        dummyMenus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/manage/menu.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMenuConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMenuConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/manage/menu.service.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AuthorizationService } from 'rebirth-permission';\nimport { Observable, of } from 'rxjs';\n\n@Injectable()\nexport class MenuService {\n  constructor(private authorizationService: AuthorizationService) {}\n\n  getMenuConfig() {\n    // this.authorizationService.getCurrentUser().roles.indexOf('Admin') or ajax\n    return this.dummyMenus();\n  }\n\n  private dummyMenus() {\n    return of({\n      menus: [\n        {\n          link: '/manage/home',\n          name: '主页',\n          svgClass: 'fa fa-home',\n          svgPath: './assets/common/sales.svg',\n        },\n        {\n          link: '/manage/order',\n          name: '销售配置',\n          svgPath: './assets/common/sales.svg',\n          children: [\n            {\n              link: '/manage/order',\n              name: '订单管理',\n            },\n            {\n              link: '/manage/order/list',\n              name: '订单列表',\n            },\n          ],\n        },\n        {\n          link: '/manage/user',\n          name: '后市场配置',\n          svgPath: './assets/common/after-sales.svg',\n          children: [\n            {\n              link: '/manage/user',\n              name: '用户管理',\n            },\n            {\n              link: '/manage/user/list',\n              name: '用户列表',\n            },\n          ],\n        },\n        {\n          link: '/manage/document',\n          name: '文档配置',\n          svgPath: './assets/common/document.svg',\n          children: [],\n        },\n      ],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/MessagePipe.html":{"url":"pipes/MessagePipe.html","title":"pipe - MessagePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  MessagePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/message/message.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        message\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: any, args?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/message/message.pipe.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        args\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { MessageResolver } from '../../core/message/message-resolver.service';\n\n@Pipe({\n  name: 'message',\n})\nexport class MessagePipe implements PipeTransform {\n  constructor(private messageResolver: MessageResolver) {}\n\n  transform(value: any, args?: any): any {\n    return value ? this.messageResolver.getMessage(value, args) : '';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageResolver.html":{"url":"injectables/MessageResolver.html","title":"injectable - MessageResolver","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  MessageResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/message/message-resolver.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                messages\n                            \n                            \n                                validationPrefix\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                formatMessage\n                            \n                            \n                                getMessage\n                            \n                            \n                                getValidationMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            formatMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        formatMessage(message: string, params: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/message/message-resolver.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMessage(msgKey: string, params: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/message/message-resolver.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        msgKey\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getValidationMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetValidationMessage(field: string, key: string, params: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/message/message-resolver.service.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        messages:     \n\n                    \n                \n                    \n                        \n                            Default value : require('./message.json')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/message/message-resolver.service.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validationPrefix\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        validationPrefix:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'validation'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/message/message-resolver.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MessageResolver {\n  messages = require('./message.json');\n  validationPrefix = 'validation';\n\n  getValidationMessage(\n    field: string,\n    key: string,\n    params: { [key: string]: any } = {},\n  ) {\n    const msgParams = {\n      field,\n      key,\n      label: field,\n      ...params,\n    };\n\n    let message = this.getMessage(\n      `${this.validationPrefix}.${field}.${key}`,\n      msgParams,\n    );\n    if (!message) {\n      message = this.getMessage(`${this.validationPrefix}.${key}`, msgParams);\n    }\n\n    return message;\n  }\n\n  getMessage(msgKey: string, params: { [key: string]: any } = {}) {\n    const message = this.messages[msgKey];\n    return message ? this.formatMessage(message, params) : '';\n  }\n\n  private formatMessage(message: string, params: { [key: string]: any }) {\n    const error = Object.keys(params).reduce(\n      (msg, key) =>\n        msg.replace(new RegExp(`{${key}}`, 'gi'), params[key].toString()),\n      message,\n    );\n\n    return `${error.substr(0, 1).toUpperCase()}${error.substr(1)}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderMockComponent.html":{"url":"components/OrderMockComponent.html","title":"component - OrderMockComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrderMockComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/manage/order-mock/order-mock.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-mock\n            \n\n            \n                styleUrls\n                order-mock.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./order-mock.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-order-mock',\n  templateUrl: './order-mock.component.html',\n  styleUrls: ['./order-mock.component.scss'],\n})\nexport class OrderMockComponent {}\n\n    \n\n    \n        \n  order mock\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  order mock'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FieldErrorComponent', 'selector': 'app-field-error'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageAppComponent', 'selector': 'app-manage-app'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'OrderMockComponent', 'selector': 'app-order-mock'},{'name': 'PageFooterComponent', 'selector': 'app-page-footer'},{'name': 'PageHeaderComponent', 'selector': 'app-page-header'},{'name': 'UserMockComponent', 'selector': 'app-user-mock'}];\n    var DIRECTIVES = [{'name': 'CollapseDirective', 'selector': '[appCollapse]'}];\n    var ACTUAL_COMPONENT = {'name': 'OrderMockComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageFooterComponent.html":{"url":"components/PageFooterComponent.html","title":"component - PageFooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageFooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/page-footer/page-footer.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-footer\n            \n\n            \n                styleUrls\n                page-footer.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-footer.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-page-footer',\n  templateUrl: './page-footer.html',\n  styleUrls: ['./page-footer.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PageFooterComponent {}\n\n    \n\n    \n        \n  © 2016 by @greengerong/@Rebirth/Admin\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  © 2016 by @greengerong/@Rebirth/Admin'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FieldErrorComponent', 'selector': 'app-field-error'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageAppComponent', 'selector': 'app-manage-app'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'OrderMockComponent', 'selector': 'app-order-mock'},{'name': 'PageFooterComponent', 'selector': 'app-page-footer'},{'name': 'PageHeaderComponent', 'selector': 'app-page-header'},{'name': 'UserMockComponent', 'selector': 'app-user-mock'}];\n    var DIRECTIVES = [{'name': 'CollapseDirective', 'selector': '[appCollapse]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageFooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageHeaderComponent.html":{"url":"components/PageHeaderComponent.html","title":"component - PageHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/page-header/page-header.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-header\n            \n\n            \n                styleUrls\n                page-header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dummyName\n                            \n                            \n                                volumeTemplate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleExpandClick\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onExpand\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onExpand\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/page-header/page-header.component.ts:9\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleExpandClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleExpandClick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/page-header/page-header.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dummyName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dummyName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '管理员名称'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/page-header/page-header.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volumeTemplate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        volumeTemplate:     \n\n                    \n                \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/page-header/page-header.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Output, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-page-header',\n  templateUrl: './page-header.component.html',\n  styleUrls: ['./page-header.component.scss'],\n})\nexport class PageHeaderComponent {\n  @Output() onExpand = new EventEmitter();\n\n  @ViewChild('volumeTemplate') volumeTemplate;\n  dummyName = '管理员名称';\n\n  handleExpandClick() {\n    this.onExpand.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    Rebirth-Admin\n  \n  \n    \n  \n\n  \n    \n      \n        &nbsp;{{dummyName}}\n        \n        \n      \n      \n        \n          个人信息\n        \n         \n          系统设置\n        \n         \n          登出\n        \n      \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Rebirth-Admin                               {{dummyName}}                                              个人信息                           系统设置                           登出                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FieldErrorComponent', 'selector': 'app-field-error'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageAppComponent', 'selector': 'app-manage-app'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'OrderMockComponent', 'selector': 'app-order-mock'},{'name': 'PageFooterComponent', 'selector': 'app-page-footer'},{'name': 'PageHeaderComponent', 'selector': 'app-page-header'},{'name': 'UserMockComponent', 'selector': 'app-user-mock'}];\n    var DIRECTIVES = [{'name': 'CollapseDirective', 'selector': '[appCollapse]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReStorageService.html":{"url":"injectables/ReStorageService.html","title":"injectable - ReStorageService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ReStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/storage/storage.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                STORAGE_VALUE_KEY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                get\n                            \n                            \n                                remove\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/storage/storage.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                    StorageService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \nclear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/storage/storage.service.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/storage/storage.service.ts:19\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/storage/storage.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave(key: string, value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/storage/storage.service.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            STORAGE_VALUE_KEY\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        STORAGE_VALUE_KEY:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'value'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/storage/storage.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService, StorageType } from 'rebirth-storage';\n\n@Injectable()\nexport class ReStorageService {\n  static STORAGE_VALUE_KEY = 'value';\n\n  constructor(private storageService: StorageService) {\n    this.storageService.setDefaultStorageType(StorageType.sessionStorage);\n  }\n\n  save(key: string, value: any) {\n    return this.storageService.put(\n      { pool: key, key: ReStorageService.STORAGE_VALUE_KEY },\n      value,\n    );\n  }\n\n  get(key: string): T {\n    return this.storageService.get({\n      pool: key,\n      key: ReStorageService.STORAGE_VALUE_KEY,\n    }) as T;\n  }\n\n  remove(key: string) {\n    return this.storageService.remove({ pool: key });\n  }\n\n  clear() {\n    return this.storageService.removeAll({});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nCollapseDirective\n\nCollapseDirective\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nCollapseDirective->SharedModule\n\n\n\n\n\nFieldErrorComponent\n\nFieldErrorComponent\n\nSharedModule -->\n\nFieldErrorComponent->SharedModule\n\n\n\n\n\nMenuBarComponent\n\nMenuBarComponent\n\nSharedModule -->\n\nMenuBarComponent->SharedModule\n\n\n\n\n\nMessagePipe\n\nMessagePipe\n\nSharedModule -->\n\nMessagePipe->SharedModule\n\n\n\n\n\nPageFooterComponent\n\nPageFooterComponent\n\nSharedModule -->\n\nPageFooterComponent->SharedModule\n\n\n\n\n\nPageHeaderComponent\n\nPageHeaderComponent\n\nSharedModule -->\n\nPageHeaderComponent->SharedModule\n\n\n\n\n\nCollapseDirective \n\nCollapseDirective \n\nCollapseDirective  -->\n\nSharedModule->CollapseDirective \n\n\n\n\n\nFieldErrorComponent \n\nFieldErrorComponent \n\nFieldErrorComponent  -->\n\nSharedModule->FieldErrorComponent \n\n\n\n\n\nMenuBarComponent \n\nMenuBarComponent \n\nMenuBarComponent  -->\n\nSharedModule->MenuBarComponent \n\n\n\n\n\nMessagePipe \n\nMessagePipe \n\nMessagePipe  -->\n\nSharedModule->MessagePipe \n\n\n\n\n\nPageFooterComponent \n\nPageFooterComponent \n\nPageFooterComponent  -->\n\nSharedModule->PageFooterComponent \n\n\n\n\n\nPageHeaderComponent \n\nPageHeaderComponent \n\nPageHeaderComponent  -->\n\nSharedModule->PageHeaderComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CollapseDirective\n                            \n                            \n                                FieldErrorComponent\n                            \n                            \n                                MenuBarComponent\n                            \n                            \n                                MessagePipe\n                            \n                            \n                                PageFooterComponent\n                            \n                            \n                                PageHeaderComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    CollapseDirective\n                            \n                            \n                                    FieldErrorComponent\n                            \n                            \n                                    MenuBarComponent\n                            \n                            \n                                    MessagePipe\n                            \n                            \n                                    PageFooterComponent\n                            \n                            \n                                    PageHeaderComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { PageHeaderComponent } from './page-header/page-header.component';\nimport { RebirthNGModule } from 'rebirth-ng';\nimport { RebirthPermissionModule } from 'rebirth-permission';\nimport { RouterModule } from '@angular/router';\nimport { MenuBarComponent } from './menu-bar/menu-bar.component';\nimport { CollapseDirective } from './collapse/collapse.directive';\nimport { FieldErrorComponent } from './field-error/field-error.component';\nimport { PageFooterComponent } from './page-footer/page-footer.component';\nimport { MessagePipe } from './message/message.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RebirthNGModule,\n    RebirthPermissionModule,\n  ],\n  declarations: [\n    PageFooterComponent,\n    CollapseDirective,\n    MenuBarComponent,\n    PageHeaderComponent,\n    FieldErrorComponent,\n    MessagePipe,\n  ],\n  exports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RebirthNGModule,\n    RebirthPermissionModule,\n    PageFooterComponent,\n    PageHeaderComponent,\n    CollapseDirective,\n    MenuBarComponent,\n    FieldErrorComponent,\n    MessagePipe,\n  ],\n  providers: [],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TitleService.html":{"url":"injectables/TitleService.html","title":"injectable - TitleService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TitleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/title/title.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getRouteTitle\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(title: Title, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/title/title.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getRouteTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getRouteTitle(event: RoutesRecognized)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/title/title.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    RoutesRecognized\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            register\n                            \n                            \n                        \n                    \n                \n                \n                    \nregister()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/title/title.service.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router, RoutesRecognized } from '@angular/router';\nimport { environment } from '../../../environments/environment';\nimport { filter, map } from 'rxjs/operators';\n\n@Injectable()\nexport class TitleService {\n  constructor(private title: Title, private router: Router) {}\n\n  register() {\n    this.router.events\n      .pipe(\n        filter(event => event instanceof RoutesRecognized),\n        map((event: RoutesRecognized) => this.getRouteTitle(event)),\n      )\n      .subscribe(pageTitle => this.title.setTitle(pageTitle));\n  }\n\n  private getRouteTitle(event: RoutesRecognized) {\n    let title = (event.state.root.data || {})['title'] || environment.title;\n    let childRoute = event.state.root.firstChild;\n    while (childRoute) {\n      title = (childRoute.data || {})['title'] || title;\n      childRoute = childRoute.firstChild;\n    }\n    return title;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserMockComponent.html":{"url":"components/UserMockComponent.html","title":"component - UserMockComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserMockComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/manage/user-mock/user-mock.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-mock\n            \n\n            \n                styleUrls\n                user-mock.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-mock.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-user-mock',\n  templateUrl: './user-mock.component.html',\n  styleUrls: ['./user-mock.component.scss'],\n})\nexport class UserMockComponent {}\n\n    \n\n    \n        \n  user-mock works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  user-mock works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FieldErrorComponent', 'selector': 'app-field-error'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageAppComponent', 'selector': 'app-manage-app'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'OrderMockComponent', 'selector': 'app-order-mock'},{'name': 'PageFooterComponent', 'selector': 'app-page-footer'},{'name': 'PageHeaderComponent', 'selector': 'app-page-header'},{'name': 'UserMockComponent', 'selector': 'app-user-mock'}];\n    var DIRECTIVES = [{'name': 'CollapseDirective', 'selector': '[appCollapse]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserMockComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/core/guid/guid.service.ts\n            \n            \n                injectable\n            \n            \n                GuidService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/core/loading/loading.service.ts\n            \n            \n                injectable\n            \n            \n                LoadingService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/core/loading/loading.ts\n            \n            \n                function\n            \n            \n                ignoreLoading\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/core/loading/loading.ts\n            \n            \n                function\n            \n            \n                isUndefined\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/core/loading/loading.ts\n            \n            \n                function\n            \n            \n                loading\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/core/message/message-resolver.service.ts\n            \n            \n                injectable\n            \n            \n                MessageResolver\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/core/storage/storage.service.ts\n            \n            \n                injectable\n            \n            \n                ReStorageService\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/core/title/title.service.ts\n            \n            \n                injectable\n            \n            \n                TitleService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/login/login.service.ts\n            \n            \n                injectable\n            \n            \n                LoginService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/manage/manage-app.component.ts\n            \n            \n                component\n            \n            \n                ManageAppComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/manage/menu.service.ts\n            \n            \n                injectable\n            \n            \n                MenuService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/manage/order-mock/order-mock.component.ts\n            \n            \n                component\n            \n            \n                OrderMockComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/manage/user-mock/user-mock.component.ts\n            \n            \n                component\n            \n            \n                UserMockComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/shared/collapse/collapse.directive.ts\n            \n            \n                directive\n            \n            \n                CollapseDirective\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                    src/app/shared/field-error/field-error.component.ts\n            \n            \n                component\n            \n            \n                FieldErrorComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/shared/menu-bar/menu-bar.component.ts\n            \n            \n                component\n            \n            \n                MenuBarComponent\n            \n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                    src/app/shared/menu-bar/menu-config.model.ts\n            \n            \n                interface\n            \n            \n                MenuConfig\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/shared/menu-bar/menu-config.model.ts\n            \n            \n                interface\n            \n            \n                MenuItem\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/shared/message/message.pipe.ts\n            \n            \n                pipe\n            \n            \n                MessagePipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/shared/model/current-user.model.ts\n            \n            \n                interface\n            \n            \n                CurrentUser\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/shared/page-footer/page-footer.component.ts\n            \n            \n                component\n            \n            \n                PageFooterComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/shared/page-header/page-header.component.ts\n            \n            \n                component\n            \n            \n                PageHeaderComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.0\n        \n            @angular/common : ^6.0.0\n        \n            @angular/compiler : ^6.0.0\n        \n            @angular/core : ^6.0.0\n        \n            @angular/forms : ^6.0.0\n        \n            @angular/platform-browser : ^6.0.0\n        \n            @angular/platform-browser-dynamic : ^6.0.0\n        \n            @angular/router : ^6.0.0\n        \n            @angular/service-worker : ^6.0.0\n        \n            @angular/language-service : ^6.0.0\n        \n            rxjs : ^6.1.0\n        \n            zone.js : ^0.8.26\n        \n            bootstrap-sass : ^3.3.7\n        \n            classlist.js : ^1.1.20150312\n        \n            core-js : ^2.5.1\n        \n            font-awesome : ^4.7.0\n        \n            immutable : ^3.8.1\n        \n            normalize.css : ^7.0.0\n        \n            rebirth-event-source : ^6.0.1\n        \n            rebirth-http : ^6.0.1\n        \n            rebirth-ng : ^6.0.3\n        \n            rebirth-permission : ^6.0.1\n        \n            rebirth-storage : ^6.0.1\n        \n            web-animations-js : ^2.3.1\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ignoreLoading   (src/.../loading.ts)\n                        \n                        \n                            isUndefined   (src/.../loading.ts)\n                        \n                        \n                            loading   (src/.../loading.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/loading/loading.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ignoreLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \nignoreLoading(request: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isUndefined\n                            \n                            \n                        \n                    \n                \n                \n                    \nisUndefined(value: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                            \n                        \n                    \n                \n                \n                    \nloading(open: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        open\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nRebirthAdmin\n\n\n背景\nRebirthAdmin是一套基于Angular 2，@angular/cli @Rebirth/NG，Bootstrap-saas的后端管理系统。目标在于方便基于Angular 2的项目快速启动，包含完善的目录结构组织、打包构建、权限、http设置等基础设施。\n需求\n\n基于@angular/cli的项目基础构建（分为core、share、feature module）\n路由、lazyload路由配置\n登录页面\n后台菜单功能（顶部状态栏和侧边栏）\n@Rebirth/NG组件的基础设置\n后台页面的权限设置(rebirth-permission)\n后台API调用基础设置（拦截器，base url）；基于rebirth-http\n全局Loading设置，每次API请求都需要显示loading（包装@Rebirth/NG的OverlayService）\n顶部导航栏退出菜单, Modal退出确认，并清除rebirth-permission等用户信息\n基于Bootstrap-saas的全局SCSS配置，目录结构组织；支持重新bootstrap样式和全局样式扩展\nFontAwesome 全局设置\n基于rebirth-http的全局JWT token设置\n基于rebirth-storage的本地存储设置\n错误提示页面：404 Not Found、500 Error\n\n技术任务\n\n升级@Angular/cli、 @Angular/xxx、rebirth-http、rebirth-permission、rebirth-storage、@Rebirth/NG等依赖到最新版本\n支持本地和ci单元测试构建体系和以后页面测试\n支持本地数据mock机制\n支持e2e单元测试基础设施设置和已有页面测试\nlogo、menu选项等支持单独地方单一地方修改\n用户需要定制化的配置信息等集中为json或ts文件集中修改\n利用Swprecache内置PWA支持\n其他平台的扩展（platform-server、electron）\n内置ng2代码文档（compodocs）\n\n实现要求\n\n严格遵守angular.io中ng的StyleGuide规范\nTypeScript 类型强制要求\n覆盖率和tslint遵守\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ManageAppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_LoginModule\n\n\n\ncluster_LoginModule_declarations\n\n\n\ncluster_LoginModule_providers\n\n\n\ncluster_ManageAppModule\n\n\n\ncluster_ManageAppModule_declarations\n\n\n\ncluster_ManageAppModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nLoginModule\n\nLoginModule\n\nLoginModule -->\n\nSharedModule->LoginModule\n\n\n\n\n\nManageAppModule\n\nManageAppModule\n\nManageAppModule -->\n\nSharedModule->ManageAppModule\n\n\n\n\n\nCollapseDirective \n\nCollapseDirective \n\nCollapseDirective  -->\n\nSharedModule->CollapseDirective \n\n\n\n\n\nFieldErrorComponent \n\nFieldErrorComponent \n\nFieldErrorComponent  -->\n\nSharedModule->FieldErrorComponent \n\n\n\n\n\nMenuBarComponent \n\nMenuBarComponent \n\nMenuBarComponent  -->\n\nSharedModule->MenuBarComponent \n\n\n\n\n\nMessagePipe \n\nMessagePipe \n\nMessagePipe  -->\n\nSharedModule->MessagePipe \n\n\n\n\n\nPageFooterComponent \n\nPageFooterComponent \n\nPageFooterComponent  -->\n\nSharedModule->PageFooterComponent \n\n\n\n\n\nPageHeaderComponent \n\nPageHeaderComponent \n\nPageHeaderComponent  -->\n\nSharedModule->PageHeaderComponent \n\n\n\n\n\nGuidService\n\nGuidService\n\nCoreModule -->\n\nGuidService->CoreModule\n\n\n\n\n\nLoadingService\n\nLoadingService\n\nCoreModule -->\n\nLoadingService->CoreModule\n\n\n\n\n\nMessageResolver\n\nMessageResolver\n\nCoreModule -->\n\nMessageResolver->CoreModule\n\n\n\n\n\nReStorageService\n\nReStorageService\n\nCoreModule -->\n\nReStorageService->CoreModule\n\n\n\n\n\nTitleService\n\nTitleService\n\nCoreModule -->\n\nTitleService->CoreModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nLoginModule -->\n\nLoginComponent->LoginModule\n\n\n\n\n\nLoginService\n\nLoginService\n\nLoginModule -->\n\nLoginService->LoginModule\n\n\n\n\n\nManageAppComponent\n\nManageAppComponent\n\nManageAppModule -->\n\nManageAppComponent->ManageAppModule\n\n\n\n\n\nOrderMockComponent\n\nOrderMockComponent\n\nManageAppModule -->\n\nOrderMockComponent->ManageAppModule\n\n\n\n\n\nUserMockComponent\n\nUserMockComponent\n\nManageAppModule -->\n\nUserMockComponent->ManageAppModule\n\n\n\n\n\nMenuService\n\nMenuService\n\nManageAppModule -->\n\nMenuService->ManageAppModule\n\n\n\n\n\nCollapseDirective\n\nCollapseDirective\n\nSharedModule -->\n\nCollapseDirective->SharedModule\n\n\n\n\n\nFieldErrorComponent\n\nFieldErrorComponent\n\nSharedModule -->\n\nFieldErrorComponent->SharedModule\n\n\n\n\n\nMenuBarComponent\n\nMenuBarComponent\n\nSharedModule -->\n\nMenuBarComponent->SharedModule\n\n\n\n\n\nMessagePipe\n\nMessagePipe\n\nSharedModule -->\n\nMessagePipe->SharedModule\n\n\n\n\n\nPageFooterComponent\n\nPageFooterComponent\n\nSharedModule -->\n\nPageFooterComponent->SharedModule\n\n\n\n\n\nPageHeaderComponent\n\nPageHeaderComponent\n\nSharedModule -->\n\nPageHeaderComponent->SharedModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            5 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        9 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 directive\n                    \n                \n            \n            \n                \n                    \n                        \n                        7 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 pipe\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
